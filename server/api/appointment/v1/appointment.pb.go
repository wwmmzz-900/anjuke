// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: appointment/v1/appointment.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 预约状态枚举
type AppointmentStatus int32

const (
	AppointmentStatus_APPOINTMENT_STATUS_UNSPECIFIED AppointmentStatus = 0 // 未指定
	AppointmentStatus_APPOINTMENT_STATUS_PENDING     AppointmentStatus = 1 // 待确认
	AppointmentStatus_APPOINTMENT_STATUS_CONFIRMED   AppointmentStatus = 2 // 已确认
	AppointmentStatus_APPOINTMENT_STATUS_IN_PROGRESS AppointmentStatus = 3 // 进行中
	AppointmentStatus_APPOINTMENT_STATUS_COMPLETED   AppointmentStatus = 4 // 已完成
	AppointmentStatus_APPOINTMENT_STATUS_CANCELLED   AppointmentStatus = 5 // 已取消
)

// Enum value maps for AppointmentStatus.
var (
	AppointmentStatus_name = map[int32]string{
		0: "APPOINTMENT_STATUS_UNSPECIFIED",
		1: "APPOINTMENT_STATUS_PENDING",
		2: "APPOINTMENT_STATUS_CONFIRMED",
		3: "APPOINTMENT_STATUS_IN_PROGRESS",
		4: "APPOINTMENT_STATUS_COMPLETED",
		5: "APPOINTMENT_STATUS_CANCELLED",
	}
	AppointmentStatus_value = map[string]int32{
		"APPOINTMENT_STATUS_UNSPECIFIED": 0,
		"APPOINTMENT_STATUS_PENDING":     1,
		"APPOINTMENT_STATUS_CONFIRMED":   2,
		"APPOINTMENT_STATUS_IN_PROGRESS": 3,
		"APPOINTMENT_STATUS_COMPLETED":   4,
		"APPOINTMENT_STATUS_CANCELLED":   5,
	}
)

func (x AppointmentStatus) Enum() *AppointmentStatus {
	p := new(AppointmentStatus)
	*p = x
	return p
}

func (x AppointmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_appointment_v1_appointment_proto_enumTypes[0].Descriptor()
}

func (AppointmentStatus) Type() protoreflect.EnumType {
	return &file_appointment_v1_appointment_proto_enumTypes[0]
}

func (x AppointmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentStatus.Descriptor instead.
func (AppointmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{0}
}

// 经纪人状态枚举
type RealtorStatus int32

const (
	RealtorStatus_REALTOR_STATUS_UNSPECIFIED RealtorStatus = 0 // 未指定
	RealtorStatus_REALTOR_STATUS_ONLINE      RealtorStatus = 1 // 在线
	RealtorStatus_REALTOR_STATUS_OFFLINE     RealtorStatus = 2 // 离线
	RealtorStatus_REALTOR_STATUS_BUSY        RealtorStatus = 3 // 忙碌
)

// Enum value maps for RealtorStatus.
var (
	RealtorStatus_name = map[int32]string{
		0: "REALTOR_STATUS_UNSPECIFIED",
		1: "REALTOR_STATUS_ONLINE",
		2: "REALTOR_STATUS_OFFLINE",
		3: "REALTOR_STATUS_BUSY",
	}
	RealtorStatus_value = map[string]int32{
		"REALTOR_STATUS_UNSPECIFIED": 0,
		"REALTOR_STATUS_ONLINE":      1,
		"REALTOR_STATUS_OFFLINE":     2,
		"REALTOR_STATUS_BUSY":        3,
	}
)

func (x RealtorStatus) Enum() *RealtorStatus {
	p := new(RealtorStatus)
	*p = x
	return p
}

func (x RealtorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RealtorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_appointment_v1_appointment_proto_enumTypes[1].Descriptor()
}

func (RealtorStatus) Type() protoreflect.EnumType {
	return &file_appointment_v1_appointment_proto_enumTypes[1]
}

func (x RealtorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RealtorStatus.Descriptor instead.
func (RealtorStatus) EnumDescriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{1}
}

// 门店信息
type StoreInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                  // 门店唯一标识ID（MongoDB ObjectID）
	StoreName           string                 `protobuf:"bytes,2,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`                                   // 门店名称
	CompanyId           string                 `protobuf:"bytes,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`                                   // 所属公司ID（MongoDB ObjectID）
	Address             string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`                                                        // 门店地址
	Phone               string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                                                            // 门店联系电话
	BusinessHours       string                 `protobuf:"bytes,6,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"`                       // 营业时间
	Rating              float64                `protobuf:"fixed64,7,opt,name=rating,proto3" json:"rating,omitempty"`                                                        // 评分
	ReviewCount         int32                  `protobuf:"varint,8,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`                            // 评价数量
	IsActive            bool                   `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`                                     // 是否激活
	CreatedTime         string                 `protobuf:"bytes,10,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`                            // 创建时间
	UpdatedTime         string                 `protobuf:"bytes,11,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`                            // 更新时间
	OnlineRealtors      int32                  `protobuf:"varint,12,opt,name=online_realtors,json=onlineRealtors,proto3" json:"online_realtors,omitempty"`                  // 当前在线经纪人数量
	AvailableSlotsToday int32                  `protobuf:"varint,13,opt,name=available_slots_today,json=availableSlotsToday,proto3" json:"available_slots_today,omitempty"` // 今日剩余可预约名额
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StoreInfo) Reset() {
	*x = StoreInfo{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreInfo) ProtoMessage() {}

func (x *StoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreInfo.ProtoReflect.Descriptor instead.
func (*StoreInfo) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{0}
}

func (x *StoreInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StoreInfo) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *StoreInfo) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *StoreInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StoreInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *StoreInfo) GetBusinessHours() string {
	if x != nil {
		return x.BusinessHours
	}
	return ""
}

func (x *StoreInfo) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *StoreInfo) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

func (x *StoreInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *StoreInfo) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *StoreInfo) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *StoreInfo) GetOnlineRealtors() int32 {
	if x != nil {
		return x.OnlineRealtors
	}
	return 0
}

func (x *StoreInfo) GetAvailableSlotsToday() int32 {
	if x != nil {
		return x.AvailableSlotsToday
	}
	return 0
}

// 可预约时段
type TimeSlot struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Date              string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`                                                     // 预约日期（格式：YYYY-MM-DD）
	StartTime         string                 `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                          // 开始时间（格式：HH:MM）
	EndTime           string                 `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                // 结束时间（格式：HH:MM）
	Available         bool                   `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`                                          // 是否可预约
	AvailableRealtors int32                  `protobuf:"varint,5,opt,name=available_realtors,json=availableRealtors,proto3" json:"available_realtors,omitempty"` // 该时段可用经纪人数量
	TotalCapacity     int32                  `protobuf:"varint,6,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`             // 总容量
	BookedCount       int32                  `protobuf:"varint,7,opt,name=booked_count,json=bookedCount,proto3" json:"booked_count,omitempty"`                   // 已预约数量
	QueueCount        int32                  `protobuf:"varint,8,opt,name=queue_count,json=queueCount,proto3" json:"queue_count,omitempty"`                      // 排队数量
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TimeSlot) Reset() {
	*x = TimeSlot{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlot) ProtoMessage() {}

func (x *TimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlot.ProtoReflect.Descriptor instead.
func (*TimeSlot) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{1}
}

func (x *TimeSlot) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TimeSlot) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TimeSlot) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TimeSlot) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *TimeSlot) GetAvailableRealtors() int32 {
	if x != nil {
		return x.AvailableRealtors
	}
	return 0
}

func (x *TimeSlot) GetTotalCapacity() int32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *TimeSlot) GetBookedCount() int32 {
	if x != nil {
		return x.BookedCount
	}
	return 0
}

func (x *TimeSlot) GetQueueCount() int32 {
	if x != nil {
		return x.QueueCount
	}
	return 0
}

// 经纪人基础信息
type RealtorBasicInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                              // 经纪人ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          // 经纪人姓名
	Phone         string                 `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`                        // 经纪人电话
	Email         string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`                        // 经纪人邮箱
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"` // 是否激活
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RealtorBasicInfo) Reset() {
	*x = RealtorBasicInfo{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealtorBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealtorBasicInfo) ProtoMessage() {}

func (x *RealtorBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealtorBasicInfo.ProtoReflect.Descriptor instead.
func (*RealtorBasicInfo) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{2}
}

func (x *RealtorBasicInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RealtorBasicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RealtorBasicInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *RealtorBasicInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RealtorBasicInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// 经纪人状态信息
type RealtorStatusInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealtorId     string                 `protobuf:"bytes,1,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`                 // 经纪人ID
	Status        RealtorStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=api.appointment.v1.RealtorStatus" json:"status,omitempty"` // 经纪人状态
	CurrentLoad   int32                  `protobuf:"varint,3,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`          // 当前负载
	MaxLoad       int32                  `protobuf:"varint,4,opt,name=max_load,json=maxLoad,proto3" json:"max_load,omitempty"`                      // 最大负载
	LastActiveAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_active_at,json=lastActiveAt,proto3" json:"last_active_at,omitempty"`      // 最后活跃时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RealtorStatusInfo) Reset() {
	*x = RealtorStatusInfo{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealtorStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealtorStatusInfo) ProtoMessage() {}

func (x *RealtorStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealtorStatusInfo.ProtoReflect.Descriptor instead.
func (*RealtorStatusInfo) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{3}
}

func (x *RealtorStatusInfo) GetRealtorId() string {
	if x != nil {
		return x.RealtorId
	}
	return ""
}

func (x *RealtorStatusInfo) GetStatus() RealtorStatus {
	if x != nil {
		return x.Status
	}
	return RealtorStatus_REALTOR_STATUS_UNSPECIFIED
}

func (x *RealtorStatusInfo) GetCurrentLoad() int32 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *RealtorStatusInfo) GetMaxLoad() int32 {
	if x != nil {
		return x.MaxLoad
	}
	return 0
}

func (x *RealtorStatusInfo) GetLastActiveAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActiveAt
	}
	return nil
}

// 预约信息
type AppointmentInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AppointmentId        string                 `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`                          // 预约唯一标识ID（MongoDB ObjectID）
	AppointmentCode      string                 `protobuf:"bytes,2,opt,name=appointment_code,json=appointmentCode,proto3" json:"appointment_code,omitempty"`                    // 预约码（6位数字，用户凭证）
	UserId               int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                              // 用户ID
	StoreId              string                 `protobuf:"bytes,4,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                                            // 门店ID（MongoDB ObjectID）
	RealtorId            string                 `protobuf:"bytes,5,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`                                      // 经纪人ID（MongoDB ObjectID，可为空）
	RealtorName          string                 `protobuf:"bytes,6,opt,name=realtor_name,json=realtorName,proto3" json:"realtor_name,omitempty"`                                // 经纪人姓名（分配后填充）
	RealtorPhone         string                 `protobuf:"bytes,7,opt,name=realtor_phone,json=realtorPhone,proto3" json:"realtor_phone,omitempty"`                             // 经纪人电话（分配后填充）
	CustomerName         string                 `protobuf:"bytes,8,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`                             // 客户姓名
	CustomerPhone        string                 `protobuf:"bytes,9,opt,name=customer_phone,json=customerPhone,proto3" json:"customer_phone,omitempty"`                          // 客户手机号
	AppointmentDate      string                 `protobuf:"bytes,10,opt,name=appointment_date,json=appointmentDate,proto3" json:"appointment_date,omitempty"`                   // 预约日期（格式：YYYY-MM-DD）
	StartTime            string                 `protobuf:"bytes,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                     // 预约开始时间（格式：HH:MM）
	EndTime              string                 `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                           // 预约结束时间（格式：HH:MM）
	DurationMinutes      int32                  `protobuf:"varint,13,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"`                  // 预约时长（分钟：30/60/90）
	Requirements         string                 `protobuf:"bytes,14,opt,name=requirements,proto3" json:"requirements,omitempty"`                                                // 客户需求描述
	Status               AppointmentStatus      `protobuf:"varint,15,opt,name=status,proto3,enum=api.appointment.v1.AppointmentStatus" json:"status,omitempty"`                 // 预约状态
	QueuePosition        int32                  `protobuf:"varint,16,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`                        // 排队位置（0表示未排队）
	EstimatedWaitMinutes int32                  `protobuf:"varint,17,opt,name=estimated_wait_minutes,json=estimatedWaitMinutes,proto3" json:"estimated_wait_minutes,omitempty"` // 预估等待时间（分钟）
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                     // 创建时间
	ConfirmedAt          *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=confirmed_at,json=confirmedAt,proto3" json:"confirmed_at,omitempty"`                               // 确认时间（可为空）
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AppointmentInfo) Reset() {
	*x = AppointmentInfo{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppointmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentInfo) ProtoMessage() {}

func (x *AppointmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentInfo.ProtoReflect.Descriptor instead.
func (*AppointmentInfo) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{4}
}

func (x *AppointmentInfo) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *AppointmentInfo) GetAppointmentCode() string {
	if x != nil {
		return x.AppointmentCode
	}
	return ""
}

func (x *AppointmentInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AppointmentInfo) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *AppointmentInfo) GetRealtorId() string {
	if x != nil {
		return x.RealtorId
	}
	return ""
}

func (x *AppointmentInfo) GetRealtorName() string {
	if x != nil {
		return x.RealtorName
	}
	return ""
}

func (x *AppointmentInfo) GetRealtorPhone() string {
	if x != nil {
		return x.RealtorPhone
	}
	return ""
}

func (x *AppointmentInfo) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *AppointmentInfo) GetCustomerPhone() string {
	if x != nil {
		return x.CustomerPhone
	}
	return ""
}

func (x *AppointmentInfo) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *AppointmentInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AppointmentInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AppointmentInfo) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *AppointmentInfo) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *AppointmentInfo) GetStatus() AppointmentStatus {
	if x != nil {
		return x.Status
	}
	return AppointmentStatus_APPOINTMENT_STATUS_UNSPECIFIED
}

func (x *AppointmentInfo) GetQueuePosition() int32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *AppointmentInfo) GetEstimatedWaitMinutes() int32 {
	if x != nil {
		return x.EstimatedWaitMinutes
	}
	return 0
}

func (x *AppointmentInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AppointmentInfo) GetConfirmedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConfirmedAt
	}
	return nil
}

// 获取门店列表请求
type ListStoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                           // 页码（从1开始，默认1）
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // 每页数量（默认20，最大100）
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                      // 搜索关键词（可选，支持门店名称、地址模糊搜索）
	CompanyId     string                 `protobuf:"bytes,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"` // 公司ID过滤（可选）
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`   // 是否激活过滤（可选，默认true）
	SortField     string                 `protobuf:"bytes,6,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"` // 排序字段（可选，如：rating, review_count）
	SortDesc      bool                   `protobuf:"varint,7,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`   // 是否降序（可选，默认true）
	Latitude      float64                `protobuf:"fixed64,8,opt,name=latitude,proto3" json:"latitude,omitempty"`                  // 用户位置纬度（可选，用于距离排序）
	Longitude     float64                `protobuf:"fixed64,9,opt,name=longitude,proto3" json:"longitude,omitempty"`                // 用户位置经度（可选，用于距离排序）
	RadiusKm      int32                  `protobuf:"varint,10,opt,name=radius_km,json=radiusKm,proto3" json:"radius_km,omitempty"`  // 搜索半径（公里，可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStoresRequest) Reset() {
	*x = ListStoresRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresRequest) ProtoMessage() {}

func (x *ListStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresRequest.ProtoReflect.Descriptor instead.
func (*ListStoresRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{5}
}

func (x *ListStoresRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStoresRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListStoresRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListStoresRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ListStoresRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ListStoresRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListStoresRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

func (x *ListStoresRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ListStoresRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ListStoresRequest) GetRadiusKm() int32 {
	if x != nil {
		return x.RadiusKm
	}
	return 0
}

// 获取门店列表响应
type ListStoresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stores        []*StoreInfo           `protobuf:"bytes,1,rep,name=stores,proto3" json:"stores,omitempty"`                      // 门店列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总记录数
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStoresResponse) Reset() {
	*x = ListStoresResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresResponse) ProtoMessage() {}

func (x *ListStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresResponse.ProtoReflect.Descriptor instead.
func (*ListStoresResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{6}
}

func (x *ListStoresResponse) GetStores() []*StoreInfo {
	if x != nil {
		return x.Stores
	}
	return nil
}

func (x *ListStoresResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStoresResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStoresResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取可预约时段请求
type GetAvailableSlotsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`       // 门店ID（必填）
	StartDate     string                 `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // 开始日期（格式：YYYY-MM-DD，默认今天）
	Days          int32                  `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`                           // 查询天数（默认7天，最多7天）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableSlotsRequest) Reset() {
	*x = GetAvailableSlotsRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableSlotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableSlotsRequest) ProtoMessage() {}

func (x *GetAvailableSlotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableSlotsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableSlotsRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{7}
}

func (x *GetAvailableSlotsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *GetAvailableSlotsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetAvailableSlotsRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

// 获取可预约时段响应
type GetAvailableSlotsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slots         []*TimeSlot            `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"` // 可预约时段列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableSlotsResponse) Reset() {
	*x = GetAvailableSlotsResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableSlotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableSlotsResponse) ProtoMessage() {}

func (x *GetAvailableSlotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableSlotsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableSlotsResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{8}
}

func (x *GetAvailableSlotsResponse) GetSlots() []*TimeSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

// 创建预约请求
type CreateAppointmentRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StoreId         string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                          // 门店ID（必填）
	CustomerName    string                 `protobuf:"bytes,2,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`           // 客户姓名（必填）
	CustomerPhone   string                 `protobuf:"bytes,3,opt,name=customer_phone,json=customerPhone,proto3" json:"customer_phone,omitempty"`        // 客户手机号（必填，需验证格式）
	AppointmentDate string                 `protobuf:"bytes,4,opt,name=appointment_date,json=appointmentDate,proto3" json:"appointment_date,omitempty"`  // 预约日期（必填，格式：YYYY-MM-DD）
	StartTime       string                 `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                    // 预约开始时间（必填，格式：HH:MM）
	DurationMinutes int32                  `protobuf:"varint,6,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"` // 预约时长（必填，只能是30/60/90分钟）
	Requirements    string                 `protobuf:"bytes,7,opt,name=requirements,proto3" json:"requirements,omitempty"`                               // 客户需求描述（可选）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateAppointmentRequest) Reset() {
	*x = CreateAppointmentRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppointmentRequest) ProtoMessage() {}

func (x *CreateAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppointmentRequest.ProtoReflect.Descriptor instead.
func (*CreateAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{9}
}

func (x *CreateAppointmentRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *CreateAppointmentRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *CreateAppointmentRequest) GetCustomerPhone() string {
	if x != nil {
		return x.CustomerPhone
	}
	return ""
}

func (x *CreateAppointmentRequest) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *CreateAppointmentRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateAppointmentRequest) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *CreateAppointmentRequest) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

// 创建预约响应
type CreateAppointmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appointment   *AppointmentInfo       `protobuf:"bytes,1,opt,name=appointment,proto3" json:"appointment,omitempty"`               // 创建的预约信息
	NeedQueue     bool                   `protobuf:"varint,2,opt,name=need_queue,json=needQueue,proto3" json:"need_queue,omitempty"` // 是否需要排队
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                       // 响应消息（成功提示或排队信息）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAppointmentResponse) Reset() {
	*x = CreateAppointmentResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppointmentResponse) ProtoMessage() {}

func (x *CreateAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppointmentResponse.ProtoReflect.Descriptor instead.
func (*CreateAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAppointmentResponse) GetAppointment() *AppointmentInfo {
	if x != nil {
		return x.Appointment
	}
	return nil
}

func (x *CreateAppointmentResponse) GetNeedQueue() bool {
	if x != nil {
		return x.NeedQueue
	}
	return false
}

func (x *CreateAppointmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取预约详情请求
type GetAppointmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppointmentId string                 `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"` // 预约ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentRequest) Reset() {
	*x = GetAppointmentRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentRequest) ProtoMessage() {}

func (x *GetAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentRequest.ProtoReflect.Descriptor instead.
func (*GetAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{11}
}

func (x *GetAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

// 获取预约详情响应
type GetAppointmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appointment   *AppointmentInfo       `protobuf:"bytes,1,opt,name=appointment,proto3" json:"appointment,omitempty"` // 预约详细信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAppointmentResponse) Reset() {
	*x = GetAppointmentResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppointmentResponse) ProtoMessage() {}

func (x *GetAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppointmentResponse.ProtoReflect.Descriptor instead.
func (*GetAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppointmentResponse) GetAppointment() *AppointmentInfo {
	if x != nil {
		return x.Appointment
	}
	return nil
}

// 取消预约请求
type CancelAppointmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppointmentId string                 `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"` // 预约ID（必填）
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                                    // 取消原因（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelAppointmentRequest) Reset() {
	*x = CancelAppointmentRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAppointmentRequest) ProtoMessage() {}

func (x *CancelAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAppointmentRequest.ProtoReflect.Descriptor instead.
func (*CancelAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{13}
}

func (x *CancelAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *CancelAppointmentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 取消预约响应
type CancelAppointmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelAppointmentResponse) Reset() {
	*x = CancelAppointmentResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAppointmentResponse) ProtoMessage() {}

func (x *CancelAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAppointmentResponse.ProtoReflect.Descriptor instead.
func (*CancelAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{14}
}

func (x *CancelAppointmentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelAppointmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 经纪人接单请求
type AcceptAppointmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppointmentId string                 `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"` // 预约ID（必填）
	RealtorId     string                 `protobuf:"bytes,2,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`             // 经纪人ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptAppointmentRequest) Reset() {
	*x = AcceptAppointmentRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAppointmentRequest) ProtoMessage() {}

func (x *AcceptAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAppointmentRequest.ProtoReflect.Descriptor instead.
func (*AcceptAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{15}
}

func (x *AcceptAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *AcceptAppointmentRequest) GetRealtorId() string {
	if x != nil {
		return x.RealtorId
	}
	return ""
}

// 经纪人接单响应
type AcceptAppointmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 接单是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptAppointmentResponse) Reset() {
	*x = AcceptAppointmentResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptAppointmentResponse) ProtoMessage() {}

func (x *AcceptAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptAppointmentResponse.ProtoReflect.Descriptor instead.
func (*AcceptAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{16}
}

func (x *AcceptAppointmentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AcceptAppointmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 经纪人确认服务请求
type ConfirmAppointmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppointmentId string                 `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"` // 预约ID（必填）
	RealtorId     string                 `protobuf:"bytes,2,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`             // 经纪人ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmAppointmentRequest) Reset() {
	*x = ConfirmAppointmentRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmAppointmentRequest) ProtoMessage() {}

func (x *ConfirmAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmAppointmentRequest.ProtoReflect.Descriptor instead.
func (*ConfirmAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{17}
}

func (x *ConfirmAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *ConfirmAppointmentRequest) GetRealtorId() string {
	if x != nil {
		return x.RealtorId
	}
	return ""
}

// 经纪人确认服务响应
type ConfirmAppointmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 确认是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmAppointmentResponse) Reset() {
	*x = ConfirmAppointmentResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmAppointmentResponse) ProtoMessage() {}

func (x *ConfirmAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmAppointmentResponse.ProtoReflect.Descriptor instead.
func (*ConfirmAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{18}
}

func (x *ConfirmAppointmentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfirmAppointmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 完成服务请求
type CompleteAppointmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppointmentId string                 `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"` // 预约ID（必填）
	RealtorId     string                 `protobuf:"bytes,2,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`             // 经纪人ID（必填）
	ServiceNotes  string                 `protobuf:"bytes,3,opt,name=service_notes,json=serviceNotes,proto3" json:"service_notes,omitempty"`    // 服务备注（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteAppointmentRequest) Reset() {
	*x = CompleteAppointmentRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteAppointmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteAppointmentRequest) ProtoMessage() {}

func (x *CompleteAppointmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteAppointmentRequest.ProtoReflect.Descriptor instead.
func (*CompleteAppointmentRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{19}
}

func (x *CompleteAppointmentRequest) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *CompleteAppointmentRequest) GetRealtorId() string {
	if x != nil {
		return x.RealtorId
	}
	return ""
}

func (x *CompleteAppointmentRequest) GetServiceNotes() string {
	if x != nil {
		return x.ServiceNotes
	}
	return ""
}

// 完成服务响应
type CompleteAppointmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 完成是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteAppointmentResponse) Reset() {
	*x = CompleteAppointmentResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteAppointmentResponse) ProtoMessage() {}

func (x *CompleteAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteAppointmentResponse.ProtoReflect.Descriptor instead.
func (*CompleteAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{20}
}

func (x *CompleteAppointmentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CompleteAppointmentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取经纪人预约列表请求
type ListRealtorAppointmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealtorId     string                 `protobuf:"bytes,1,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"` // 经纪人ID（必填）
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                        // 预约状态过滤（可选：pending/confirmed/in_progress/completed）
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                            // 查询日期（格式：YYYY-MM-DD，默认今天）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRealtorAppointmentsRequest) Reset() {
	*x = ListRealtorAppointmentsRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRealtorAppointmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRealtorAppointmentsRequest) ProtoMessage() {}

func (x *ListRealtorAppointmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRealtorAppointmentsRequest.ProtoReflect.Descriptor instead.
func (*ListRealtorAppointmentsRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{21}
}

func (x *ListRealtorAppointmentsRequest) GetRealtorId() string {
	if x != nil {
		return x.RealtorId
	}
	return ""
}

func (x *ListRealtorAppointmentsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListRealtorAppointmentsRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// 获取经纪人预约列表响应
type ListRealtorAppointmentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appointments  []*AppointmentInfo     `protobuf:"bytes,1,rep,name=appointments,proto3" json:"appointments,omitempty"` // 预约列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRealtorAppointmentsResponse) Reset() {
	*x = ListRealtorAppointmentsResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRealtorAppointmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRealtorAppointmentsResponse) ProtoMessage() {}

func (x *ListRealtorAppointmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRealtorAppointmentsResponse.ProtoReflect.Descriptor instead.
func (*ListRealtorAppointmentsResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{22}
}

func (x *ListRealtorAppointmentsResponse) GetAppointments() []*AppointmentInfo {
	if x != nil {
		return x.Appointments
	}
	return nil
}

// 更新经纪人状态请求
type UpdateRealtorStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealtorId     string                 `protobuf:"bytes,1,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"` // 经纪人ID（必填）
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                        // 状态（必填：online/offline/busy）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRealtorStatusRequest) Reset() {
	*x = UpdateRealtorStatusRequest{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRealtorStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRealtorStatusRequest) ProtoMessage() {}

func (x *UpdateRealtorStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRealtorStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateRealtorStatusRequest) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateRealtorStatusRequest) GetRealtorId() string {
	if x != nil {
		return x.RealtorId
	}
	return ""
}

func (x *UpdateRealtorStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 更新经纪人状态响应
type UpdateRealtorStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 更新是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRealtorStatusResponse) Reset() {
	*x = UpdateRealtorStatusResponse{}
	mi := &file_appointment_v1_appointment_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRealtorStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRealtorStatusResponse) ProtoMessage() {}

func (x *UpdateRealtorStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appointment_v1_appointment_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRealtorStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateRealtorStatusResponse) Descriptor() ([]byte, []int) {
	return file_appointment_v1_appointment_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateRealtorStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateRealtorStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_appointment_v1_appointment_proto protoreflect.FileDescriptor

const file_appointment_v1_appointment_proto_rawDesc = "" +
	"\n" +
	" appointment/v1/appointment.proto\x12\x12api.appointment.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"\xab\x03\n" +
	"\tStoreInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"store_name\x18\x02 \x01(\tR\tstoreName\x12\x1d\n" +
	"\n" +
	"company_id\x18\x03 \x01(\tR\tcompanyId\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\x12%\n" +
	"\x0ebusiness_hours\x18\x06 \x01(\tR\rbusinessHours\x12\x16\n" +
	"\x06rating\x18\a \x01(\x01R\x06rating\x12!\n" +
	"\freview_count\x18\b \x01(\x05R\vreviewCount\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\x12!\n" +
	"\fcreated_time\x18\n" +
	" \x01(\tR\vcreatedTime\x12!\n" +
	"\fupdated_time\x18\v \x01(\tR\vupdatedTime\x12'\n" +
	"\x0fonline_realtors\x18\f \x01(\x05R\x0eonlineRealtors\x122\n" +
	"\x15available_slots_today\x18\r \x01(\x05R\x13availableSlotsToday\"\x90\x02\n" +
	"\bTimeSlot\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\tR\aendTime\x12\x1c\n" +
	"\tavailable\x18\x04 \x01(\bR\tavailable\x12-\n" +
	"\x12available_realtors\x18\x05 \x01(\x05R\x11availableRealtors\x12%\n" +
	"\x0etotal_capacity\x18\x06 \x01(\x05R\rtotalCapacity\x12!\n" +
	"\fbooked_count\x18\a \x01(\x05R\vbookedCount\x12\x1f\n" +
	"\vqueue_count\x18\b \x01(\x05R\n" +
	"queueCount\"\x7f\n" +
	"\x10RealtorBasicInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05phone\x18\x03 \x01(\tR\x05phone\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\"\xed\x01\n" +
	"\x11RealtorStatusInfo\x12\x1d\n" +
	"\n" +
	"realtor_id\x18\x01 \x01(\tR\trealtorId\x129\n" +
	"\x06status\x18\x02 \x01(\x0e2!.api.appointment.v1.RealtorStatusR\x06status\x12!\n" +
	"\fcurrent_load\x18\x03 \x01(\x05R\vcurrentLoad\x12\x19\n" +
	"\bmax_load\x18\x04 \x01(\x05R\amaxLoad\x12@\n" +
	"\x0elast_active_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\flastActiveAt\"\x94\x06\n" +
	"\x0fAppointmentInfo\x12%\n" +
	"\x0eappointment_id\x18\x01 \x01(\tR\rappointmentId\x12)\n" +
	"\x10appointment_code\x18\x02 \x01(\tR\x0fappointmentCode\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x19\n" +
	"\bstore_id\x18\x04 \x01(\tR\astoreId\x12\x1d\n" +
	"\n" +
	"realtor_id\x18\x05 \x01(\tR\trealtorId\x12!\n" +
	"\frealtor_name\x18\x06 \x01(\tR\vrealtorName\x12#\n" +
	"\rrealtor_phone\x18\a \x01(\tR\frealtorPhone\x12#\n" +
	"\rcustomer_name\x18\b \x01(\tR\fcustomerName\x12%\n" +
	"\x0ecustomer_phone\x18\t \x01(\tR\rcustomerPhone\x12)\n" +
	"\x10appointment_date\x18\n" +
	" \x01(\tR\x0fappointmentDate\x12\x1d\n" +
	"\n" +
	"start_time\x18\v \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\f \x01(\tR\aendTime\x12)\n" +
	"\x10duration_minutes\x18\r \x01(\x05R\x0fdurationMinutes\x12\"\n" +
	"\frequirements\x18\x0e \x01(\tR\frequirements\x12=\n" +
	"\x06status\x18\x0f \x01(\x0e2%.api.appointment.v1.AppointmentStatusR\x06status\x12%\n" +
	"\x0equeue_position\x18\x10 \x01(\x05R\rqueuePosition\x124\n" +
	"\x16estimated_wait_minutes\x18\x11 \x01(\x05R\x14estimatedWaitMinutes\x129\n" +
	"\n" +
	"created_at\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fconfirmed_at\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\vconfirmedAt\"\xad\x02\n" +
	"\x11ListStoresRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\x12\x1d\n" +
	"\n" +
	"company_id\x18\x04 \x01(\tR\tcompanyId\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x06 \x01(\tR\tsortField\x12\x1b\n" +
	"\tsort_desc\x18\a \x01(\bR\bsortDesc\x12\x1a\n" +
	"\blatitude\x18\b \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\t \x01(\x01R\tlongitude\x12\x1b\n" +
	"\tradius_km\x18\n" +
	" \x01(\x05R\bradiusKm\"\x92\x01\n" +
	"\x12ListStoresResponse\x125\n" +
	"\x06stores\x18\x01 \x03(\v2\x1d.api.appointment.v1.StoreInfoR\x06stores\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"q\n" +
	"\x18GetAvailableSlotsRequest\x12\"\n" +
	"\bstore_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\astoreId\x12\x1d\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tR\tstartDate\x12\x12\n" +
	"\x04days\x18\x03 \x01(\x05R\x04days\"O\n" +
	"\x19GetAvailableSlotsResponse\x122\n" +
	"\x05slots\x18\x01 \x03(\v2\x1c.api.appointment.v1.TimeSlotR\x05slots\"\xe1\x02\n" +
	"\x18CreateAppointmentRequest\x12\"\n" +
	"\bstore_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\astoreId\x12,\n" +
	"\rcustomer_name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\fcustomerName\x12;\n" +
	"\x0ecustomer_phone\x18\x03 \x01(\tB\x14\xfaB\x11r\x0f2\r^1[3-9]\\d{9}$R\rcustomerPhone\x122\n" +
	"\x10appointment_date\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x0fappointmentDate\x12&\n" +
	"\n" +
	"start_time\x18\x05 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tstartTime\x126\n" +
	"\x10duration_minutes\x18\x06 \x01(\x05B\v\xfaB\b\x1a\x060\x1e0<0ZR\x0fdurationMinutes\x12\"\n" +
	"\frequirements\x18\a \x01(\tR\frequirements\"\x9b\x01\n" +
	"\x19CreateAppointmentResponse\x12E\n" +
	"\vappointment\x18\x01 \x01(\v2#.api.appointment.v1.AppointmentInfoR\vappointment\x12\x1d\n" +
	"\n" +
	"need_queue\x18\x02 \x01(\bR\tneedQueue\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"G\n" +
	"\x15GetAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\rappointmentId\"_\n" +
	"\x16GetAppointmentResponse\x12E\n" +
	"\vappointment\x18\x01 \x01(\v2#.api.appointment.v1.AppointmentInfoR\vappointment\"b\n" +
	"\x18CancelAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\rappointmentId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"O\n" +
	"\x19CancelAppointmentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"r\n" +
	"\x18AcceptAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\rappointmentId\x12&\n" +
	"\n" +
	"realtor_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\trealtorId\"O\n" +
	"\x19AcceptAppointmentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"s\n" +
	"\x19ConfirmAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\rappointmentId\x12&\n" +
	"\n" +
	"realtor_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\trealtorId\"P\n" +
	"\x1aConfirmAppointmentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x99\x01\n" +
	"\x1aCompleteAppointmentRequest\x12.\n" +
	"\x0eappointment_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\rappointmentId\x12&\n" +
	"\n" +
	"realtor_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\trealtorId\x12#\n" +
	"\rservice_notes\x18\x03 \x01(\tR\fserviceNotes\"Q\n" +
	"\x1bCompleteAppointmentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"t\n" +
	"\x1eListRealtorAppointmentsRequest\x12&\n" +
	"\n" +
	"realtor_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\trealtorId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\"j\n" +
	"\x1fListRealtorAppointmentsResponse\x12G\n" +
	"\fappointments\x18\x01 \x03(\v2#.api.appointment.v1.AppointmentInfoR\fappointments\"z\n" +
	"\x1aUpdateRealtorStatusRequest\x12&\n" +
	"\n" +
	"realtor_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\trealtorId\x124\n" +
	"\x06status\x18\x02 \x01(\tB\x1c\xfaB\x19r\x17R\x06onlineR\aofflineR\x04busyR\x06status\"Q\n" +
	"\x1bUpdateRealtorStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\xe1\x01\n" +
	"\x11AppointmentStatus\x12\"\n" +
	"\x1eAPPOINTMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aAPPOINTMENT_STATUS_PENDING\x10\x01\x12 \n" +
	"\x1cAPPOINTMENT_STATUS_CONFIRMED\x10\x02\x12\"\n" +
	"\x1eAPPOINTMENT_STATUS_IN_PROGRESS\x10\x03\x12 \n" +
	"\x1cAPPOINTMENT_STATUS_COMPLETED\x10\x04\x12 \n" +
	"\x1cAPPOINTMENT_STATUS_CANCELLED\x10\x05*\x7f\n" +
	"\rRealtorStatus\x12\x1e\n" +
	"\x1aREALTOR_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15REALTOR_STATUS_ONLINE\x10\x01\x12\x1a\n" +
	"\x16REALTOR_STATUS_OFFLINE\x10\x02\x12\x17\n" +
	"\x13REALTOR_STATUS_BUSY\x10\x032\xd7\r\n" +
	"\x12AppointmentService\x12\x88\x01\n" +
	"\x13ListAvailableStores\x12%.api.appointment.v1.ListStoresRequest\x1a&.api.appointment.v1.ListStoresResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/appointment/stores\x12\xa5\x01\n" +
	"\x11GetAvailableSlots\x12,.api.appointment.v1.GetAvailableSlotsRequest\x1a-.api.appointment.v1.GetAvailableSlotsResponse\"3\x82\xd3\xe4\x93\x02-\x12+/api/v1/appointment/stores/{store_id}/slots\x12\x9d\x01\n" +
	"\x11CreateAppointment\x12,.api.appointment.v1.CreateAppointmentRequest\x1a-.api.appointment.v1.CreateAppointmentResponse\"+\x82\xd3\xe4\x93\x02%:\x01*\" /api/v1/appointment/appointments\x12\xa2\x01\n" +
	"\x0eGetAppointment\x12).api.appointment.v1.GetAppointmentRequest\x1a*.api.appointment.v1.GetAppointmentResponse\"9\x82\xd3\xe4\x93\x023\x121/api/v1/appointment/appointments/{appointment_id}\x12\xb5\x01\n" +
	"\x11CancelAppointment\x12,.api.appointment.v1.CancelAppointmentRequest\x1a-.api.appointment.v1.CancelAppointmentResponse\"C\x82\xd3\xe4\x93\x02=:\x01*\"8/api/v1/appointment/appointments/{appointment_id}/cancel\x12\xb5\x01\n" +
	"\x11AcceptAppointment\x12,.api.appointment.v1.AcceptAppointmentRequest\x1a-.api.appointment.v1.AcceptAppointmentResponse\"C\x82\xd3\xe4\x93\x02=:\x01*\"8/api/v1/appointment/appointments/{appointment_id}/accept\x12\xb9\x01\n" +
	"\x12ConfirmAppointment\x12-.api.appointment.v1.ConfirmAppointmentRequest\x1a..api.appointment.v1.ConfirmAppointmentResponse\"D\x82\xd3\xe4\x93\x02>:\x01*\"9/api/v1/appointment/appointments/{appointment_id}/confirm\x12\xbd\x01\n" +
	"\x13CompleteAppointment\x12..api.appointment.v1.CompleteAppointmentRequest\x1a/.api.appointment.v1.CompleteAppointmentResponse\"E\x82\xd3\xe4\x93\x02?:\x01*\":/api/v1/appointment/appointments/{appointment_id}/complete\x12\xb4\x01\n" +
	"\x17ListRealtorAppointments\x122.api.appointment.v1.ListRealtorAppointmentsRequest\x1a3.api.appointment.v1.ListRealtorAppointmentsResponse\"0\x82\xd3\xe4\x93\x02*\x12(/api/v1/appointment/realtor/appointments\x12\xa5\x01\n" +
	"\x13UpdateRealtorStatus\x12..api.appointment.v1.UpdateRealtorStatusRequest\x1a/.api.appointment.v1.UpdateRealtorStatusResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/api/v1/appointment/realtor/statusB%Z#anjuke/server/api/appointment/v1;v1b\x06proto3"

var (
	file_appointment_v1_appointment_proto_rawDescOnce sync.Once
	file_appointment_v1_appointment_proto_rawDescData []byte
)

func file_appointment_v1_appointment_proto_rawDescGZIP() []byte {
	file_appointment_v1_appointment_proto_rawDescOnce.Do(func() {
		file_appointment_v1_appointment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_appointment_v1_appointment_proto_rawDesc), len(file_appointment_v1_appointment_proto_rawDesc)))
	})
	return file_appointment_v1_appointment_proto_rawDescData
}

var file_appointment_v1_appointment_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_appointment_v1_appointment_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_appointment_v1_appointment_proto_goTypes = []any{
	(AppointmentStatus)(0),                  // 0: api.appointment.v1.AppointmentStatus
	(RealtorStatus)(0),                      // 1: api.appointment.v1.RealtorStatus
	(*StoreInfo)(nil),                       // 2: api.appointment.v1.StoreInfo
	(*TimeSlot)(nil),                        // 3: api.appointment.v1.TimeSlot
	(*RealtorBasicInfo)(nil),                // 4: api.appointment.v1.RealtorBasicInfo
	(*RealtorStatusInfo)(nil),               // 5: api.appointment.v1.RealtorStatusInfo
	(*AppointmentInfo)(nil),                 // 6: api.appointment.v1.AppointmentInfo
	(*ListStoresRequest)(nil),               // 7: api.appointment.v1.ListStoresRequest
	(*ListStoresResponse)(nil),              // 8: api.appointment.v1.ListStoresResponse
	(*GetAvailableSlotsRequest)(nil),        // 9: api.appointment.v1.GetAvailableSlotsRequest
	(*GetAvailableSlotsResponse)(nil),       // 10: api.appointment.v1.GetAvailableSlotsResponse
	(*CreateAppointmentRequest)(nil),        // 11: api.appointment.v1.CreateAppointmentRequest
	(*CreateAppointmentResponse)(nil),       // 12: api.appointment.v1.CreateAppointmentResponse
	(*GetAppointmentRequest)(nil),           // 13: api.appointment.v1.GetAppointmentRequest
	(*GetAppointmentResponse)(nil),          // 14: api.appointment.v1.GetAppointmentResponse
	(*CancelAppointmentRequest)(nil),        // 15: api.appointment.v1.CancelAppointmentRequest
	(*CancelAppointmentResponse)(nil),       // 16: api.appointment.v1.CancelAppointmentResponse
	(*AcceptAppointmentRequest)(nil),        // 17: api.appointment.v1.AcceptAppointmentRequest
	(*AcceptAppointmentResponse)(nil),       // 18: api.appointment.v1.AcceptAppointmentResponse
	(*ConfirmAppointmentRequest)(nil),       // 19: api.appointment.v1.ConfirmAppointmentRequest
	(*ConfirmAppointmentResponse)(nil),      // 20: api.appointment.v1.ConfirmAppointmentResponse
	(*CompleteAppointmentRequest)(nil),      // 21: api.appointment.v1.CompleteAppointmentRequest
	(*CompleteAppointmentResponse)(nil),     // 22: api.appointment.v1.CompleteAppointmentResponse
	(*ListRealtorAppointmentsRequest)(nil),  // 23: api.appointment.v1.ListRealtorAppointmentsRequest
	(*ListRealtorAppointmentsResponse)(nil), // 24: api.appointment.v1.ListRealtorAppointmentsResponse
	(*UpdateRealtorStatusRequest)(nil),      // 25: api.appointment.v1.UpdateRealtorStatusRequest
	(*UpdateRealtorStatusResponse)(nil),     // 26: api.appointment.v1.UpdateRealtorStatusResponse
	(*timestamppb.Timestamp)(nil),           // 27: google.protobuf.Timestamp
}
var file_appointment_v1_appointment_proto_depIdxs = []int32{
	1,  // 0: api.appointment.v1.RealtorStatusInfo.status:type_name -> api.appointment.v1.RealtorStatus
	27, // 1: api.appointment.v1.RealtorStatusInfo.last_active_at:type_name -> google.protobuf.Timestamp
	0,  // 2: api.appointment.v1.AppointmentInfo.status:type_name -> api.appointment.v1.AppointmentStatus
	27, // 3: api.appointment.v1.AppointmentInfo.created_at:type_name -> google.protobuf.Timestamp
	27, // 4: api.appointment.v1.AppointmentInfo.confirmed_at:type_name -> google.protobuf.Timestamp
	2,  // 5: api.appointment.v1.ListStoresResponse.stores:type_name -> api.appointment.v1.StoreInfo
	3,  // 6: api.appointment.v1.GetAvailableSlotsResponse.slots:type_name -> api.appointment.v1.TimeSlot
	6,  // 7: api.appointment.v1.CreateAppointmentResponse.appointment:type_name -> api.appointment.v1.AppointmentInfo
	6,  // 8: api.appointment.v1.GetAppointmentResponse.appointment:type_name -> api.appointment.v1.AppointmentInfo
	6,  // 9: api.appointment.v1.ListRealtorAppointmentsResponse.appointments:type_name -> api.appointment.v1.AppointmentInfo
	7,  // 10: api.appointment.v1.AppointmentService.ListAvailableStores:input_type -> api.appointment.v1.ListStoresRequest
	9,  // 11: api.appointment.v1.AppointmentService.GetAvailableSlots:input_type -> api.appointment.v1.GetAvailableSlotsRequest
	11, // 12: api.appointment.v1.AppointmentService.CreateAppointment:input_type -> api.appointment.v1.CreateAppointmentRequest
	13, // 13: api.appointment.v1.AppointmentService.GetAppointment:input_type -> api.appointment.v1.GetAppointmentRequest
	15, // 14: api.appointment.v1.AppointmentService.CancelAppointment:input_type -> api.appointment.v1.CancelAppointmentRequest
	17, // 15: api.appointment.v1.AppointmentService.AcceptAppointment:input_type -> api.appointment.v1.AcceptAppointmentRequest
	19, // 16: api.appointment.v1.AppointmentService.ConfirmAppointment:input_type -> api.appointment.v1.ConfirmAppointmentRequest
	21, // 17: api.appointment.v1.AppointmentService.CompleteAppointment:input_type -> api.appointment.v1.CompleteAppointmentRequest
	23, // 18: api.appointment.v1.AppointmentService.ListRealtorAppointments:input_type -> api.appointment.v1.ListRealtorAppointmentsRequest
	25, // 19: api.appointment.v1.AppointmentService.UpdateRealtorStatus:input_type -> api.appointment.v1.UpdateRealtorStatusRequest
	8,  // 20: api.appointment.v1.AppointmentService.ListAvailableStores:output_type -> api.appointment.v1.ListStoresResponse
	10, // 21: api.appointment.v1.AppointmentService.GetAvailableSlots:output_type -> api.appointment.v1.GetAvailableSlotsResponse
	12, // 22: api.appointment.v1.AppointmentService.CreateAppointment:output_type -> api.appointment.v1.CreateAppointmentResponse
	14, // 23: api.appointment.v1.AppointmentService.GetAppointment:output_type -> api.appointment.v1.GetAppointmentResponse
	16, // 24: api.appointment.v1.AppointmentService.CancelAppointment:output_type -> api.appointment.v1.CancelAppointmentResponse
	18, // 25: api.appointment.v1.AppointmentService.AcceptAppointment:output_type -> api.appointment.v1.AcceptAppointmentResponse
	20, // 26: api.appointment.v1.AppointmentService.ConfirmAppointment:output_type -> api.appointment.v1.ConfirmAppointmentResponse
	22, // 27: api.appointment.v1.AppointmentService.CompleteAppointment:output_type -> api.appointment.v1.CompleteAppointmentResponse
	24, // 28: api.appointment.v1.AppointmentService.ListRealtorAppointments:output_type -> api.appointment.v1.ListRealtorAppointmentsResponse
	26, // 29: api.appointment.v1.AppointmentService.UpdateRealtorStatus:output_type -> api.appointment.v1.UpdateRealtorStatusResponse
	20, // [20:30] is the sub-list for method output_type
	10, // [10:20] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_appointment_v1_appointment_proto_init() }
func file_appointment_v1_appointment_proto_init() {
	if File_appointment_v1_appointment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_appointment_v1_appointment_proto_rawDesc), len(file_appointment_v1_appointment_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_appointment_v1_appointment_proto_goTypes,
		DependencyIndexes: file_appointment_v1_appointment_proto_depIdxs,
		EnumInfos:         file_appointment_v1_appointment_proto_enumTypes,
		MessageInfos:      file_appointment_v1_appointment_proto_msgTypes,
	}.Build()
	File_appointment_v1_appointment_proto = out.File
	file_appointment_v1_appointment_proto_goTypes = nil
	file_appointment_v1_appointment_proto_depIdxs = nil
}
