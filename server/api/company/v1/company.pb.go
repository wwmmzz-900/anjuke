// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: company/v1/company.proto

package v1

import (
	v1 "anjuke/server/api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 预约状态枚举
type AppointmentStatus int32

const (
	AppointmentStatus_APPOINTMENT_STATUS_UNSPECIFIED AppointmentStatus = 0 // 未指定
	AppointmentStatus_APPOINTMENT_STATUS_PENDING     AppointmentStatus = 1 // 待确认
	AppointmentStatus_APPOINTMENT_STATUS_CONFIRMED   AppointmentStatus = 2 // 已确认
	AppointmentStatus_APPOINTMENT_STATUS_IN_PROGRESS AppointmentStatus = 3 // 进行中
	AppointmentStatus_APPOINTMENT_STATUS_COMPLETED   AppointmentStatus = 4 // 已完成
	AppointmentStatus_APPOINTMENT_STATUS_CANCELLED   AppointmentStatus = 5 // 已取消
)

// Enum value maps for AppointmentStatus.
var (
	AppointmentStatus_name = map[int32]string{
		0: "APPOINTMENT_STATUS_UNSPECIFIED",
		1: "APPOINTMENT_STATUS_PENDING",
		2: "APPOINTMENT_STATUS_CONFIRMED",
		3: "APPOINTMENT_STATUS_IN_PROGRESS",
		4: "APPOINTMENT_STATUS_COMPLETED",
		5: "APPOINTMENT_STATUS_CANCELLED",
	}
	AppointmentStatus_value = map[string]int32{
		"APPOINTMENT_STATUS_UNSPECIFIED": 0,
		"APPOINTMENT_STATUS_PENDING":     1,
		"APPOINTMENT_STATUS_CONFIRMED":   2,
		"APPOINTMENT_STATUS_IN_PROGRESS": 3,
		"APPOINTMENT_STATUS_COMPLETED":   4,
		"APPOINTMENT_STATUS_CANCELLED":   5,
	}
)

func (x AppointmentStatus) Enum() *AppointmentStatus {
	p := new(AppointmentStatus)
	*p = x
	return p
}

func (x AppointmentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_company_v1_company_proto_enumTypes[0].Descriptor()
}

func (AppointmentStatus) Type() protoreflect.EnumType {
	return &file_company_v1_company_proto_enumTypes[0]
}

func (x AppointmentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentStatus.Descriptor instead.
func (AppointmentStatus) EnumDescriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{0}
}

// 经纪人状态枚举
type RealtorStatus int32

const (
	RealtorStatus_REALTOR_STATUS_UNSPECIFIED RealtorStatus = 0 // 未指定
	RealtorStatus_REALTOR_STATUS_ONLINE      RealtorStatus = 1 // 在线
	RealtorStatus_REALTOR_STATUS_OFFLINE     RealtorStatus = 2 // 离线
	RealtorStatus_REALTOR_STATUS_BUSY        RealtorStatus = 3 // 忙碌
)

// Enum value maps for RealtorStatus.
var (
	RealtorStatus_name = map[int32]string{
		0: "REALTOR_STATUS_UNSPECIFIED",
		1: "REALTOR_STATUS_ONLINE",
		2: "REALTOR_STATUS_OFFLINE",
		3: "REALTOR_STATUS_BUSY",
	}
	RealtorStatus_value = map[string]int32{
		"REALTOR_STATUS_UNSPECIFIED": 0,
		"REALTOR_STATUS_ONLINE":      1,
		"REALTOR_STATUS_OFFLINE":     2,
		"REALTOR_STATUS_BUSY":        3,
	}
)

func (x RealtorStatus) Enum() *RealtorStatus {
	p := new(RealtorStatus)
	*p = x
	return p
}

func (x RealtorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RealtorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_company_v1_company_proto_enumTypes[1].Descriptor()
}

func (RealtorStatus) Type() protoreflect.EnumType {
	return &file_company_v1_company_proto_enumTypes[1]
}

func (x RealtorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RealtorStatus.Descriptor instead.
func (RealtorStatus) EnumDescriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{1}
}

// 公司信息
type CompanyInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 公司唯一标识ID（MySQL uint64）
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`                // 公司全称
	ShortName     string                 `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`             // 公司简称
	BusinessScope string                 `protobuf:"bytes,4,opt,name=business_scope,json=businessScope,proto3" json:"business_scope,omitempty"` // 业务范围描述
	Address       string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`                                  // 公司地址
	Phone         string                 `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`                                      // 联系电话
	CompanyLogo   string                 `protobuf:"bytes,7,opt,name=company_logo,json=companyLogo,proto3" json:"company_logo,omitempty"`       // 公司Logo URL（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompanyInfo) Reset() {
	*x = CompanyInfo{}
	mi := &file_company_v1_company_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompanyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyInfo) ProtoMessage() {}

func (x *CompanyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyInfo.ProtoReflect.Descriptor instead.
func (*CompanyInfo) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{0}
}

func (x *CompanyInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CompanyInfo) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CompanyInfo) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *CompanyInfo) GetBusinessScope() string {
	if x != nil {
		return x.BusinessScope
	}
	return ""
}

func (x *CompanyInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CompanyInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CompanyInfo) GetCompanyLogo() string {
	if x != nil {
		return x.CompanyLogo
	}
	return ""
}

// 创建公司请求
type CreateCompanyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullName      string                 `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`                // 公司全称（必填）
	ShortName     string                 `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`             // 公司简称（必填）
	BusinessScope string                 `protobuf:"bytes,3,opt,name=business_scope,json=businessScope,proto3" json:"business_scope,omitempty"` // 业务范围描述（必填）
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`                                  // 公司地址（必填）
	Phone         string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                                      // 联系电话（必填）
	CompanyLogo   string                 `protobuf:"bytes,6,opt,name=company_logo,json=companyLogo,proto3" json:"company_logo,omitempty"`       // 公司Logo URL（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCompanyRequest) Reset() {
	*x = CreateCompanyRequest{}
	mi := &file_company_v1_company_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyRequest) ProtoMessage() {}

func (x *CreateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCompanyRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *CreateCompanyRequest) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *CreateCompanyRequest) GetBusinessScope() string {
	if x != nil {
		return x.BusinessScope
	}
	return ""
}

func (x *CreateCompanyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateCompanyRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateCompanyRequest) GetCompanyLogo() string {
	if x != nil {
		return x.CompanyLogo
	}
	return ""
}

// 获取公司请求
type GetCompanyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 公司ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompanyRequest) Reset() {
	*x = GetCompanyRequest{}
	mi := &file_company_v1_company_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyRequest) ProtoMessage() {}

func (x *GetCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{2}
}

func (x *GetCompanyRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新公司请求
type UpdateCompanyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 公司ID（必填）
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`                // 公司全称（必填）
	ShortName     string                 `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`             // 公司简称（必填）
	BusinessScope string                 `protobuf:"bytes,4,opt,name=business_scope,json=businessScope,proto3" json:"business_scope,omitempty"` // 业务范围描述（必填）
	Address       string                 `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`                                  // 公司地址（必填）
	Phone         string                 `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`                                      // 联系电话（必填）
	CompanyLogo   string                 `protobuf:"bytes,7,opt,name=company_logo,json=companyLogo,proto3" json:"company_logo,omitempty"`       // 公司Logo URL（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCompanyRequest) Reset() {
	*x = UpdateCompanyRequest{}
	mi := &file_company_v1_company_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyRequest) ProtoMessage() {}

func (x *UpdateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCompanyRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCompanyRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UpdateCompanyRequest) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *UpdateCompanyRequest) GetBusinessScope() string {
	if x != nil {
		return x.BusinessScope
	}
	return ""
}

func (x *UpdateCompanyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateCompanyRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateCompanyRequest) GetCompanyLogo() string {
	if x != nil {
		return x.CompanyLogo
	}
	return ""
}

// 删除公司请求
type DeleteCompanyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 公司ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCompanyRequest) Reset() {
	*x = DeleteCompanyRequest{}
	mi := &file_company_v1_company_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyRequest) ProtoMessage() {}

func (x *DeleteCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyRequest.ProtoReflect.Descriptor instead.
func (*DeleteCompanyRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCompanyRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 查询公司列表请求
type ListCompaniesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码（从1开始，默认1）
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量（默认20，最大100）
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                    // 搜索关键词（可选，支持公司名称模糊搜索）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompaniesRequest) Reset() {
	*x = ListCompaniesRequest{}
	mi := &file_company_v1_company_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompaniesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompaniesRequest) ProtoMessage() {}

func (x *ListCompaniesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompaniesRequest.ProtoReflect.Descriptor instead.
func (*ListCompaniesRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{5}
}

func (x *ListCompaniesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCompaniesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCompaniesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 查询公司列表响应
type ListCompaniesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Companies     []*CompanyInfo         `protobuf:"bytes,1,rep,name=companies,proto3" json:"companies,omitempty"`                // 公司列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总记录数
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompaniesResponse) Reset() {
	*x = ListCompaniesResponse{}
	mi := &file_company_v1_company_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompaniesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompaniesResponse) ProtoMessage() {}

func (x *ListCompaniesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompaniesResponse.ProtoReflect.Descriptor instead.
func (*ListCompaniesResponse) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{6}
}

func (x *ListCompaniesResponse) GetCompanies() []*CompanyInfo {
	if x != nil {
		return x.Companies
	}
	return nil
}

func (x *ListCompaniesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCompaniesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCompaniesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取公司门店请求
type GetCompanyStoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     uint64                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"` // 公司ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCompanyStoresRequest) Reset() {
	*x = GetCompanyStoresRequest{}
	mi := &file_company_v1_company_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompanyStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyStoresRequest) ProtoMessage() {}

func (x *GetCompanyStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyStoresRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyStoresRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{7}
}

func (x *GetCompanyStoresRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// 获取公司下的门店列表（分页）请求
type GetStoresByCompanyIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     uint64                 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"` // 公司ID（必填）
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                            // 页码（从1开始，默认1）
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页数量（默认20，最大100）
	IsActive      bool                   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`    // 是否激活过滤（可选，默认true）
	SortField     string                 `protobuf:"bytes,5,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`  // 排序字段（可选，如：rating, review_count）
	SortDesc      bool                   `protobuf:"varint,6,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`    // 是否降序（可选，默认true）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStoresByCompanyIDRequest) Reset() {
	*x = GetStoresByCompanyIDRequest{}
	mi := &file_company_v1_company_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoresByCompanyIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoresByCompanyIDRequest) ProtoMessage() {}

func (x *GetStoresByCompanyIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoresByCompanyIDRequest.ProtoReflect.Descriptor instead.
func (*GetStoresByCompanyIDRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{8}
}

func (x *GetStoresByCompanyIDRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *GetStoresByCompanyIDRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetStoresByCompanyIDRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetStoresByCompanyIDRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetStoresByCompanyIDRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *GetStoresByCompanyIDRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// 门店信息
type StoreInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 门店唯一标识ID（MySQL uint64）
	StoreName     string                 `protobuf:"bytes,2,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`             // 门店名称
	CompanyId     uint64                 `protobuf:"varint,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`            // 所属公司ID（MySQL uint64）
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`                                  // 门店地址
	Phone         string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                                      // 门店联系电话
	BusinessHours string                 `protobuf:"bytes,6,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"` // 营业时间
	Rating        float64                `protobuf:"fixed64,7,opt,name=rating,proto3" json:"rating,omitempty"`                                  // 评分
	ReviewCount   int32                  `protobuf:"varint,8,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`      // 评价数量
	IsActive      bool                   `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`               // 是否激活
	CreatedTime   string                 `protobuf:"bytes,10,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`      // 创建时间
	UpdatedTime   string                 `protobuf:"bytes,11,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`      // 更新时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreInfo) Reset() {
	*x = StoreInfo{}
	mi := &file_company_v1_company_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreInfo) ProtoMessage() {}

func (x *StoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreInfo.ProtoReflect.Descriptor instead.
func (*StoreInfo) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{9}
}

func (x *StoreInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreInfo) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *StoreInfo) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *StoreInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StoreInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *StoreInfo) GetBusinessHours() string {
	if x != nil {
		return x.BusinessHours
	}
	return ""
}

func (x *StoreInfo) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *StoreInfo) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

func (x *StoreInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *StoreInfo) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *StoreInfo) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

// 创建门店请求
type CreateStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreName     string                 `protobuf:"bytes,1,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`             // 门店名称（必填）
	CompanyId     uint64                 `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`            // 所属公司ID（必填）
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                                  // 门店地址（必填）
	Phone         string                 `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                      // 门店联系电话（必填）
	BusinessHours string                 `protobuf:"bytes,5,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"` // 营业时间（可选）
	Rating        float64                `protobuf:"fixed64,6,opt,name=rating,proto3" json:"rating,omitempty"`                                  // 评分（可选）
	ReviewCount   int32                  `protobuf:"varint,7,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`      // 评价数量（可选）
	IsActive      bool                   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`               // 是否激活（可选，默认true）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStoreRequest) Reset() {
	*x = CreateStoreRequest{}
	mi := &file_company_v1_company_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreRequest) ProtoMessage() {}

func (x *CreateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreRequest.ProtoReflect.Descriptor instead.
func (*CreateStoreRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{10}
}

func (x *CreateStoreRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *CreateStoreRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CreateStoreRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateStoreRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateStoreRequest) GetBusinessHours() string {
	if x != nil {
		return x.BusinessHours
	}
	return ""
}

func (x *CreateStoreRequest) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CreateStoreRequest) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

func (x *CreateStoreRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// 获取门店请求
type GetStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 门店ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStoreRequest) Reset() {
	*x = GetStoreRequest{}
	mi := &file_company_v1_company_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreRequest) ProtoMessage() {}

func (x *GetStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreRequest.ProtoReflect.Descriptor instead.
func (*GetStoreRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{11}
}

func (x *GetStoreRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新门店请求
type UpdateStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                           // 门店ID（必填）
	StoreName     string                 `protobuf:"bytes,2,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`             // 门店名称（必填）
	CompanyId     uint64                 `protobuf:"varint,3,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`            // 所属公司ID（必填）
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`                                  // 门店地址（必填）
	Phone         string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`                                      // 门店联系电话（必填）
	BusinessHours string                 `protobuf:"bytes,6,opt,name=business_hours,json=businessHours,proto3" json:"business_hours,omitempty"` // 营业时间（可选）
	Rating        float64                `protobuf:"fixed64,7,opt,name=rating,proto3" json:"rating,omitempty"`                                  // 评分（可选）
	ReviewCount   int32                  `protobuf:"varint,8,opt,name=review_count,json=reviewCount,proto3" json:"review_count,omitempty"`      // 评价数量（可选）
	IsActive      bool                   `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`               // 是否激活（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStoreRequest) Reset() {
	*x = UpdateStoreRequest{}
	mi := &file_company_v1_company_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreRequest) ProtoMessage() {}

func (x *UpdateStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoreRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateStoreRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStoreRequest) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *UpdateStoreRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *UpdateStoreRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateStoreRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateStoreRequest) GetBusinessHours() string {
	if x != nil {
		return x.BusinessHours
	}
	return ""
}

func (x *UpdateStoreRequest) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdateStoreRequest) GetReviewCount() int32 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

func (x *UpdateStoreRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// 删除门店请求
type DeleteStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 门店ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStoreRequest) Reset() {
	*x = DeleteStoreRequest{}
	mi := &file_company_v1_company_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoreRequest) ProtoMessage() {}

func (x *DeleteStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteStoreRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteStoreRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 查询门店列表请求
type ListStoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                            // 页码（从1开始，默认1）
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页数量（默认20，最大100）
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                       // 搜索关键词（可选，支持门店名称、地址模糊搜索）
	CompanyId     uint64                 `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"` // 公司ID过滤（可选）
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`    // 是否激活过滤（可选，默认true）
	SortField     string                 `protobuf:"bytes,6,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`  // 排序字段（可选，如：rating, review_count）
	SortDesc      bool                   `protobuf:"varint,7,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`    // 是否降序（可选，默认true）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStoresRequest) Reset() {
	*x = ListStoresRequest{}
	mi := &file_company_v1_company_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresRequest) ProtoMessage() {}

func (x *ListStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresRequest.ProtoReflect.Descriptor instead.
func (*ListStoresRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{14}
}

func (x *ListStoresRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStoresRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListStoresRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListStoresRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *ListStoresRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ListStoresRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListStoresRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// 查询门店列表响应
type ListStoresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stores        []*StoreInfo           `protobuf:"bytes,1,rep,name=stores,proto3" json:"stores,omitempty"`                      // 门店列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总记录数
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStoresResponse) Reset() {
	*x = ListStoresResponse{}
	mi := &file_company_v1_company_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresResponse) ProtoMessage() {}

func (x *ListStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresResponse.ProtoReflect.Descriptor instead.
func (*ListStoresResponse) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{15}
}

func (x *ListStoresResponse) GetStores() []*StoreInfo {
	if x != nil {
		return x.Stores
	}
	return nil
}

func (x *ListStoresResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStoresResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStoresResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取门店经纪人请求
type GetStoreRealtorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       uint64                 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"` // 门店ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStoreRealtorsRequest) Reset() {
	*x = GetStoreRealtorsRequest{}
	mi := &file_company_v1_company_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreRealtorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreRealtorsRequest) ProtoMessage() {}

func (x *GetStoreRealtorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreRealtorsRequest.ProtoReflect.Descriptor instead.
func (*GetStoreRealtorsRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{16}
}

func (x *GetStoreRealtorsRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

// 获取门店下的经纪人列表（分页）请求
type GetRealtorsByStoreIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       uint64                 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`      // 门店ID（必填）
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                           // 页码（从1开始，默认1）
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // 每页数量（默认20，最大100）
	Keyword       string                 `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`                      // 搜索关键词（可选，支持经纪人姓名、电话模糊搜索）
	SortField     string                 `protobuf:"bytes,5,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"` // 排序字段（可选，如：second_hand_score, rental_score）
	SortDesc      bool                   `protobuf:"varint,6,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`   // 是否降序（可选，默认true）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRealtorsByStoreIDRequest) Reset() {
	*x = GetRealtorsByStoreIDRequest{}
	mi := &file_company_v1_company_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRealtorsByStoreIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealtorsByStoreIDRequest) ProtoMessage() {}

func (x *GetRealtorsByStoreIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealtorsByStoreIDRequest.ProtoReflect.Descriptor instead.
func (*GetRealtorsByStoreIDRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{17}
}

func (x *GetRealtorsByStoreIDRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *GetRealtorsByStoreIDRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRealtorsByStoreIDRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRealtorsByStoreIDRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetRealtorsByStoreIDRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *GetRealtorsByStoreIDRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// 获取可预约门店列表请求
type ListAvailableStoresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                            // 页码（从1开始，默认1）
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页数量（默认20，最大100）
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                             // 预约日期（格式：YYYY-MM-DD，可选，默认今天）
	TimeSlot      string                 `protobuf:"bytes,4,opt,name=time_slot,json=timeSlot,proto3" json:"time_slot,omitempty"`     // 时间段（格式：HH:MM，可选）
	Area          string                 `protobuf:"bytes,5,opt,name=area,proto3" json:"area,omitempty"`                             // 区域过滤（可选）
	CompanyId     uint64                 `protobuf:"varint,6,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"` // 公司ID过滤（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAvailableStoresRequest) Reset() {
	*x = ListAvailableStoresRequest{}
	mi := &file_company_v1_company_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAvailableStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableStoresRequest) ProtoMessage() {}

func (x *ListAvailableStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableStoresRequest.ProtoReflect.Descriptor instead.
func (*ListAvailableStoresRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{18}
}

func (x *ListAvailableStoresRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAvailableStoresRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAvailableStoresRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ListAvailableStoresRequest) GetTimeSlot() string {
	if x != nil {
		return x.TimeSlot
	}
	return ""
}

func (x *ListAvailableStoresRequest) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *ListAvailableStoresRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

// 经纪人信息
type RealtorInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                  // 经纪人唯一标识ID（MySQL uint64）
	RealtorName          string                 `protobuf:"bytes,2,opt,name=realtor_name,json=realtorName,proto3" json:"realtor_name,omitempty"`                              // 经纪人姓名
	BusinessArea         []string               `protobuf:"bytes,3,rep,name=business_area,json=businessArea,proto3" json:"business_area,omitempty"`                           // 业务区域列表（如：["朝阳区", "东城区"]）
	SecondHandScore      int32                  `protobuf:"varint,4,opt,name=second_hand_score,json=secondHandScore,proto3" json:"second_hand_score,omitempty"`               // 二手房业务评分（0-100分）
	RentalScore          int32                  `protobuf:"varint,5,opt,name=rental_score,json=rentalScore,proto3" json:"rental_score,omitempty"`                             // 租房业务评分（0-100分）
	ServiceYears         string                 `protobuf:"bytes,6,opt,name=service_years,json=serviceYears,proto3" json:"service_years,omitempty"`                           // 从业年限（如："5年"）
	ServicePeopleCount   int32                  `protobuf:"varint,7,opt,name=service_people_count,json=servicePeopleCount,proto3" json:"service_people_count,omitempty"`      // 服务客户数量
	MainBusinessArea     []string               `protobuf:"bytes,8,rep,name=main_business_area,json=mainBusinessArea,proto3" json:"main_business_area,omitempty"`             // 主要业务区域列表
	MainResidentialAreas []string               `protobuf:"bytes,9,rep,name=main_residential_areas,json=mainResidentialAreas,proto3" json:"main_residential_areas,omitempty"` // 主要住宅区域列表
	CompanyId            uint64                 `protobuf:"varint,10,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`                                  // 所属公司ID（MySQL uint64）
	StoreId              uint64                 `protobuf:"varint,11,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                                        // 所属门店ID（MySQL uint64）
	Phone                string                 `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`                                                            // 经纪人电话（可选）
	Avatar               string                 `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                          // 头像URL（可选）
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RealtorInfo) Reset() {
	*x = RealtorInfo{}
	mi := &file_company_v1_company_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealtorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealtorInfo) ProtoMessage() {}

func (x *RealtorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealtorInfo.ProtoReflect.Descriptor instead.
func (*RealtorInfo) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{19}
}

func (x *RealtorInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RealtorInfo) GetRealtorName() string {
	if x != nil {
		return x.RealtorName
	}
	return ""
}

func (x *RealtorInfo) GetBusinessArea() []string {
	if x != nil {
		return x.BusinessArea
	}
	return nil
}

func (x *RealtorInfo) GetSecondHandScore() int32 {
	if x != nil {
		return x.SecondHandScore
	}
	return 0
}

func (x *RealtorInfo) GetRentalScore() int32 {
	if x != nil {
		return x.RentalScore
	}
	return 0
}

func (x *RealtorInfo) GetServiceYears() string {
	if x != nil {
		return x.ServiceYears
	}
	return ""
}

func (x *RealtorInfo) GetServicePeopleCount() int32 {
	if x != nil {
		return x.ServicePeopleCount
	}
	return 0
}

func (x *RealtorInfo) GetMainBusinessArea() []string {
	if x != nil {
		return x.MainBusinessArea
	}
	return nil
}

func (x *RealtorInfo) GetMainResidentialAreas() []string {
	if x != nil {
		return x.MainResidentialAreas
	}
	return nil
}

func (x *RealtorInfo) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *RealtorInfo) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *RealtorInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *RealtorInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 创建经纪人请求
type CreateRealtorRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	RealtorName          string                 `protobuf:"bytes,1,opt,name=realtor_name,json=realtorName,proto3" json:"realtor_name,omitempty"`                              // 经纪人姓名（必填）
	BusinessArea         []string               `protobuf:"bytes,2,rep,name=business_area,json=businessArea,proto3" json:"business_area,omitempty"`                           // 业务区域列表（必填）
	SecondHandScore      int32                  `protobuf:"varint,3,opt,name=second_hand_score,json=secondHandScore,proto3" json:"second_hand_score,omitempty"`               // 二手房业务评分（0-100分，必填）
	RentalScore          int32                  `protobuf:"varint,4,opt,name=rental_score,json=rentalScore,proto3" json:"rental_score,omitempty"`                             // 租房业务评分（0-100分，必填）
	ServiceYears         string                 `protobuf:"bytes,5,opt,name=service_years,json=serviceYears,proto3" json:"service_years,omitempty"`                           // 从业年限（必填）
	ServicePeopleCount   int32                  `protobuf:"varint,6,opt,name=service_people_count,json=servicePeopleCount,proto3" json:"service_people_count,omitempty"`      // 服务客户数量（必填）
	MainBusinessArea     []string               `protobuf:"bytes,7,rep,name=main_business_area,json=mainBusinessArea,proto3" json:"main_business_area,omitempty"`             // 主要业务区域列表（可选）
	MainResidentialAreas []string               `protobuf:"bytes,8,rep,name=main_residential_areas,json=mainResidentialAreas,proto3" json:"main_residential_areas,omitempty"` // 主要住宅区域列表（可选）
	CompanyId            uint64                 `protobuf:"varint,9,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`                                   // 所属公司ID（必填）
	StoreId              uint64                 `protobuf:"varint,10,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                                        // 所属门店ID（必填）
	Phone                string                 `protobuf:"bytes,11,opt,name=phone,proto3" json:"phone,omitempty"`                                                            // 经纪人电话（可选）
	Avatar               string                 `protobuf:"bytes,12,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                          // 头像URL（可选）
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CreateRealtorRequest) Reset() {
	*x = CreateRealtorRequest{}
	mi := &file_company_v1_company_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRealtorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRealtorRequest) ProtoMessage() {}

func (x *CreateRealtorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRealtorRequest.ProtoReflect.Descriptor instead.
func (*CreateRealtorRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{20}
}

func (x *CreateRealtorRequest) GetRealtorName() string {
	if x != nil {
		return x.RealtorName
	}
	return ""
}

func (x *CreateRealtorRequest) GetBusinessArea() []string {
	if x != nil {
		return x.BusinessArea
	}
	return nil
}

func (x *CreateRealtorRequest) GetSecondHandScore() int32 {
	if x != nil {
		return x.SecondHandScore
	}
	return 0
}

func (x *CreateRealtorRequest) GetRentalScore() int32 {
	if x != nil {
		return x.RentalScore
	}
	return 0
}

func (x *CreateRealtorRequest) GetServiceYears() string {
	if x != nil {
		return x.ServiceYears
	}
	return ""
}

func (x *CreateRealtorRequest) GetServicePeopleCount() int32 {
	if x != nil {
		return x.ServicePeopleCount
	}
	return 0
}

func (x *CreateRealtorRequest) GetMainBusinessArea() []string {
	if x != nil {
		return x.MainBusinessArea
	}
	return nil
}

func (x *CreateRealtorRequest) GetMainResidentialAreas() []string {
	if x != nil {
		return x.MainResidentialAreas
	}
	return nil
}

func (x *CreateRealtorRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CreateRealtorRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *CreateRealtorRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateRealtorRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 获取经纪人请求
type GetRealtorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 经纪人ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRealtorRequest) Reset() {
	*x = GetRealtorRequest{}
	mi := &file_company_v1_company_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRealtorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealtorRequest) ProtoMessage() {}

func (x *GetRealtorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealtorRequest.ProtoReflect.Descriptor instead.
func (*GetRealtorRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{21}
}

func (x *GetRealtorRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新经纪人请求
type UpdateRealtorRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                  // 经纪人ID（必填）
	RealtorName          string                 `protobuf:"bytes,2,opt,name=realtor_name,json=realtorName,proto3" json:"realtor_name,omitempty"`                              // 经纪人姓名（必填）
	BusinessArea         []string               `protobuf:"bytes,3,rep,name=business_area,json=businessArea,proto3" json:"business_area,omitempty"`                           // 业务区域列表（必填）
	SecondHandScore      int32                  `protobuf:"varint,4,opt,name=second_hand_score,json=secondHandScore,proto3" json:"second_hand_score,omitempty"`               // 二手房业务评分（0-100分，必填）
	RentalScore          int32                  `protobuf:"varint,5,opt,name=rental_score,json=rentalScore,proto3" json:"rental_score,omitempty"`                             // 租房业务评分（0-100分，必填）
	ServiceYears         string                 `protobuf:"bytes,6,opt,name=service_years,json=serviceYears,proto3" json:"service_years,omitempty"`                           // 从业年限（必填）
	ServicePeopleCount   int32                  `protobuf:"varint,7,opt,name=service_people_count,json=servicePeopleCount,proto3" json:"service_people_count,omitempty"`      // 服务客户数量（必填）
	MainBusinessArea     []string               `protobuf:"bytes,8,rep,name=main_business_area,json=mainBusinessArea,proto3" json:"main_business_area,omitempty"`             // 主要业务区域列表（可选）
	MainResidentialAreas []string               `protobuf:"bytes,9,rep,name=main_residential_areas,json=mainResidentialAreas,proto3" json:"main_residential_areas,omitempty"` // 主要住宅区域列表（可选）
	CompanyId            uint64                 `protobuf:"varint,10,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`                                  // 所属公司ID（必填）
	StoreId              uint64                 `protobuf:"varint,11,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                                        // 所属门店ID（必填）
	Phone                string                 `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`                                                            // 经纪人电话（可选）
	Avatar               string                 `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                          // 头像URL（可选）
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UpdateRealtorRequest) Reset() {
	*x = UpdateRealtorRequest{}
	mi := &file_company_v1_company_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRealtorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRealtorRequest) ProtoMessage() {}

func (x *UpdateRealtorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRealtorRequest.ProtoReflect.Descriptor instead.
func (*UpdateRealtorRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateRealtorRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRealtorRequest) GetRealtorName() string {
	if x != nil {
		return x.RealtorName
	}
	return ""
}

func (x *UpdateRealtorRequest) GetBusinessArea() []string {
	if x != nil {
		return x.BusinessArea
	}
	return nil
}

func (x *UpdateRealtorRequest) GetSecondHandScore() int32 {
	if x != nil {
		return x.SecondHandScore
	}
	return 0
}

func (x *UpdateRealtorRequest) GetRentalScore() int32 {
	if x != nil {
		return x.RentalScore
	}
	return 0
}

func (x *UpdateRealtorRequest) GetServiceYears() string {
	if x != nil {
		return x.ServiceYears
	}
	return ""
}

func (x *UpdateRealtorRequest) GetServicePeopleCount() int32 {
	if x != nil {
		return x.ServicePeopleCount
	}
	return 0
}

func (x *UpdateRealtorRequest) GetMainBusinessArea() []string {
	if x != nil {
		return x.MainBusinessArea
	}
	return nil
}

func (x *UpdateRealtorRequest) GetMainResidentialAreas() []string {
	if x != nil {
		return x.MainResidentialAreas
	}
	return nil
}

func (x *UpdateRealtorRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *UpdateRealtorRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *UpdateRealtorRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateRealtorRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

// 删除经纪人请求
type DeleteRealtorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 经纪人ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRealtorRequest) Reset() {
	*x = DeleteRealtorRequest{}
	mi := &file_company_v1_company_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRealtorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRealtorRequest) ProtoMessage() {}

func (x *DeleteRealtorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRealtorRequest.ProtoReflect.Descriptor instead.
func (*DeleteRealtorRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteRealtorRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 查询经纪人列表请求
type ListRealtorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                            // 页码（从1开始，默认1）
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页数量（默认20，最大100）
	Keyword       string                 `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`                       // 搜索关键词（可选，支持经纪人姓名、电话模糊搜索）
	StoreId       uint64                 `protobuf:"varint,4,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`       // 门店ID过滤（可选）
	CompanyId     uint64                 `protobuf:"varint,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"` // 公司ID过滤（可选）
	SortField     string                 `protobuf:"bytes,6,opt,name=sort_field,json=sortField,proto3" json:"sort_field,omitempty"`  // 排序字段（可选，如：second_hand_score, rental_score）
	SortDesc      bool                   `protobuf:"varint,7,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`    // 是否降序（可选，默认true）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRealtorsRequest) Reset() {
	*x = ListRealtorsRequest{}
	mi := &file_company_v1_company_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRealtorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRealtorsRequest) ProtoMessage() {}

func (x *ListRealtorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRealtorsRequest.ProtoReflect.Descriptor instead.
func (*ListRealtorsRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{24}
}

func (x *ListRealtorsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRealtorsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRealtorsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListRealtorsRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ListRealtorsRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *ListRealtorsRequest) GetSortField() string {
	if x != nil {
		return x.SortField
	}
	return ""
}

func (x *ListRealtorsRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// 查询经纪人列表响应
type ListRealtorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Realtors      []*RealtorInfo         `protobuf:"bytes,1,rep,name=realtors,proto3" json:"realtors,omitempty"`                  // 经纪人列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总记录数
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页码
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRealtorsResponse) Reset() {
	*x = ListRealtorsResponse{}
	mi := &file_company_v1_company_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRealtorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRealtorsResponse) ProtoMessage() {}

func (x *ListRealtorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRealtorsResponse.ProtoReflect.Descriptor instead.
func (*ListRealtorsResponse) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{25}
}

func (x *ListRealtorsResponse) GetRealtors() []*RealtorInfo {
	if x != nil {
		return x.Realtors
	}
	return nil
}

func (x *ListRealtorsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRealtorsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRealtorsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取经纪人状态请求
type GetRealtorStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealtorId     uint64                 `protobuf:"varint,1,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"` // 经纪人ID（必填）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRealtorStatusRequest) Reset() {
	*x = GetRealtorStatusRequest{}
	mi := &file_company_v1_company_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRealtorStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealtorStatusRequest) ProtoMessage() {}

func (x *GetRealtorStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealtorStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRealtorStatusRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{26}
}

func (x *GetRealtorStatusRequest) GetRealtorId() uint64 {
	if x != nil {
		return x.RealtorId
	}
	return 0
}

// 经纪人状态信息
type RealtorStatusInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RealtorId      uint64                 `protobuf:"varint,1,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`                 // 经纪人ID
	Status         RealtorStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=api.company.v1.RealtorStatus" json:"status,omitempty"`      // 状态
	CurrentLoad    int32                  `protobuf:"varint,3,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`           // 当前负载
	MaxLoad        int32                  `protobuf:"varint,4,opt,name=max_load,json=maxLoad,proto3" json:"max_load,omitempty"`                       // 最大负载
	LastActiveTime string                 `protobuf:"bytes,5,opt,name=last_active_time,json=lastActiveTime,proto3" json:"last_active_time,omitempty"` // 最后活跃时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RealtorStatusInfo) Reset() {
	*x = RealtorStatusInfo{}
	mi := &file_company_v1_company_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealtorStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealtorStatusInfo) ProtoMessage() {}

func (x *RealtorStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealtorStatusInfo.ProtoReflect.Descriptor instead.
func (*RealtorStatusInfo) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{27}
}

func (x *RealtorStatusInfo) GetRealtorId() uint64 {
	if x != nil {
		return x.RealtorId
	}
	return 0
}

func (x *RealtorStatusInfo) GetStatus() RealtorStatus {
	if x != nil {
		return x.Status
	}
	return RealtorStatus_REALTOR_STATUS_UNSPECIFIED
}

func (x *RealtorStatusInfo) GetCurrentLoad() int32 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *RealtorStatusInfo) GetMaxLoad() int32 {
	if x != nil {
		return x.MaxLoad
	}
	return 0
}

func (x *RealtorStatusInfo) GetLastActiveTime() string {
	if x != nil {
		return x.LastActiveTime
	}
	return ""
}

// 更新经纪人状态请求
type UpdateRealtorStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealtorId     uint64                 `protobuf:"varint,1,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`            // 经纪人ID（必填）
	Status        RealtorStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=api.company.v1.RealtorStatus" json:"status,omitempty"` // 状态（必填）
	MaxLoad       int32                  `protobuf:"varint,3,opt,name=max_load,json=maxLoad,proto3" json:"max_load,omitempty"`                  // 最大负载（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRealtorStatusRequest) Reset() {
	*x = UpdateRealtorStatusRequest{}
	mi := &file_company_v1_company_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRealtorStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRealtorStatusRequest) ProtoMessage() {}

func (x *UpdateRealtorStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRealtorStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateRealtorStatusRequest) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateRealtorStatusRequest) GetRealtorId() uint64 {
	if x != nil {
		return x.RealtorId
	}
	return 0
}

func (x *UpdateRealtorStatusRequest) GetStatus() RealtorStatus {
	if x != nil {
		return x.Status
	}
	return RealtorStatus_REALTOR_STATUS_UNSPECIFIED
}

func (x *UpdateRealtorStatusRequest) GetMaxLoad() int32 {
	if x != nil {
		return x.MaxLoad
	}
	return 0
}

// 可预约时段
type TimeSlot struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Date              string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`                                                     // 预约日期（格式：YYYY-MM-DD）
	StartTime         string                 `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                          // 开始时间（格式：HH:MM）
	EndTime           string                 `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                // 结束时间（格式：HH:MM）
	Available         bool                   `protobuf:"varint,4,opt,name=available,proto3" json:"available,omitempty"`                                          // 是否可预约
	AvailableRealtors int32                  `protobuf:"varint,5,opt,name=available_realtors,json=availableRealtors,proto3" json:"available_realtors,omitempty"` // 该时段可用经纪人数量
	TotalCapacity     int32                  `protobuf:"varint,6,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`             // 总容量
	BookedCount       int32                  `protobuf:"varint,7,opt,name=booked_count,json=bookedCount,proto3" json:"booked_count,omitempty"`                   // 已预约数量
	QueueCount        int32                  `protobuf:"varint,8,opt,name=queue_count,json=queueCount,proto3" json:"queue_count,omitempty"`                      // 排队数量
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TimeSlot) Reset() {
	*x = TimeSlot{}
	mi := &file_company_v1_company_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlot) ProtoMessage() {}

func (x *TimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlot.ProtoReflect.Descriptor instead.
func (*TimeSlot) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{29}
}

func (x *TimeSlot) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TimeSlot) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TimeSlot) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TimeSlot) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *TimeSlot) GetAvailableRealtors() int32 {
	if x != nil {
		return x.AvailableRealtors
	}
	return 0
}

func (x *TimeSlot) GetTotalCapacity() int32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *TimeSlot) GetBookedCount() int32 {
	if x != nil {
		return x.BookedCount
	}
	return 0
}

func (x *TimeSlot) GetQueueCount() int32 {
	if x != nil {
		return x.QueueCount
	}
	return 0
}

// 预约信息
type AppointmentInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AppointmentId        uint64                 `protobuf:"varint,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`                         // 预约唯一标识ID（MySQL uint64）
	AppointmentCode      string                 `protobuf:"bytes,2,opt,name=appointment_code,json=appointmentCode,proto3" json:"appointment_code,omitempty"`                    // 预约码（6位数字，用户凭证）
	UserId               int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                              // 用户ID
	StoreId              uint64                 `protobuf:"varint,4,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                                           // 门店ID（MySQL uint64）
	RealtorId            uint64                 `protobuf:"varint,5,opt,name=realtor_id,json=realtorId,proto3" json:"realtor_id,omitempty"`                                     // 经纪人ID（MySQL uint64，可为空）
	RealtorName          string                 `protobuf:"bytes,6,opt,name=realtor_name,json=realtorName,proto3" json:"realtor_name,omitempty"`                                // 经纪人姓名（分配后填充）
	RealtorPhone         string                 `protobuf:"bytes,7,opt,name=realtor_phone,json=realtorPhone,proto3" json:"realtor_phone,omitempty"`                             // 经纪人电话（分配后填充）
	CustomerName         string                 `protobuf:"bytes,8,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`                             // 客户姓名
	CustomerPhone        string                 `protobuf:"bytes,9,opt,name=customer_phone,json=customerPhone,proto3" json:"customer_phone,omitempty"`                          // 客户手机号
	AppointmentDate      string                 `protobuf:"bytes,10,opt,name=appointment_date,json=appointmentDate,proto3" json:"appointment_date,omitempty"`                   // 预约日期（格式：YYYY-MM-DD）
	StartTime            string                 `protobuf:"bytes,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                     // 预约开始时间（格式：HH:MM）
	EndTime              string                 `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                           // 预约结束时间（格式：HH:MM）
	DurationMinutes      int32                  `protobuf:"varint,13,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"`                  // 预约时长（分钟：30/60/90）
	Requirements         string                 `protobuf:"bytes,14,opt,name=requirements,proto3" json:"requirements,omitempty"`                                                // 客户需求描述
	Status               AppointmentStatus      `protobuf:"varint,15,opt,name=status,proto3,enum=api.company.v1.AppointmentStatus" json:"status,omitempty"`                     // 预约状态
	QueuePosition        int32                  `protobuf:"varint,16,opt,name=queue_position,json=queuePosition,proto3" json:"queue_position,omitempty"`                        // 排队位置（0表示未排队）
	EstimatedWaitMinutes int32                  `protobuf:"varint,17,opt,name=estimated_wait_minutes,json=estimatedWaitMinutes,proto3" json:"estimated_wait_minutes,omitempty"` // 预估等待时间（分钟）
	CreatedTime          string                 `protobuf:"bytes,18,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`                               // 创建时间
	ConfirmedTime        string                 `protobuf:"bytes,19,opt,name=confirmed_time,json=confirmedTime,proto3" json:"confirmed_time,omitempty"`                         // 确认时间（可为空）
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AppointmentInfo) Reset() {
	*x = AppointmentInfo{}
	mi := &file_company_v1_company_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppointmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentInfo) ProtoMessage() {}

func (x *AppointmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_company_v1_company_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentInfo.ProtoReflect.Descriptor instead.
func (*AppointmentInfo) Descriptor() ([]byte, []int) {
	return file_company_v1_company_proto_rawDescGZIP(), []int{30}
}

func (x *AppointmentInfo) GetAppointmentId() uint64 {
	if x != nil {
		return x.AppointmentId
	}
	return 0
}

func (x *AppointmentInfo) GetAppointmentCode() string {
	if x != nil {
		return x.AppointmentCode
	}
	return ""
}

func (x *AppointmentInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AppointmentInfo) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *AppointmentInfo) GetRealtorId() uint64 {
	if x != nil {
		return x.RealtorId
	}
	return 0
}

func (x *AppointmentInfo) GetRealtorName() string {
	if x != nil {
		return x.RealtorName
	}
	return ""
}

func (x *AppointmentInfo) GetRealtorPhone() string {
	if x != nil {
		return x.RealtorPhone
	}
	return ""
}

func (x *AppointmentInfo) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *AppointmentInfo) GetCustomerPhone() string {
	if x != nil {
		return x.CustomerPhone
	}
	return ""
}

func (x *AppointmentInfo) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *AppointmentInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AppointmentInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AppointmentInfo) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *AppointmentInfo) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *AppointmentInfo) GetStatus() AppointmentStatus {
	if x != nil {
		return x.Status
	}
	return AppointmentStatus_APPOINTMENT_STATUS_UNSPECIFIED
}

func (x *AppointmentInfo) GetQueuePosition() int32 {
	if x != nil {
		return x.QueuePosition
	}
	return 0
}

func (x *AppointmentInfo) GetEstimatedWaitMinutes() int32 {
	if x != nil {
		return x.EstimatedWaitMinutes
	}
	return 0
}

func (x *AppointmentInfo) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *AppointmentInfo) GetConfirmedTime() string {
	if x != nil {
		return x.ConfirmedTime
	}
	return ""
}

var File_company_v1_company_proto protoreflect.FileDescriptor

const file_company_v1_company_proto_rawDesc = "" +
	"\n" +
	"\x18company/v1/company.proto\x12\x0eapi.company.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x16common/v1/common.proto\"\xd3\x01\n" +
	"\vCompanyInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1b\n" +
	"\tfull_name\x18\x02 \x01(\tR\bfullName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x03 \x01(\tR\tshortName\x12%\n" +
	"\x0ebusiness_scope\x18\x04 \x01(\tR\rbusinessScope\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x06 \x01(\tR\x05phone\x12!\n" +
	"\fcompany_logo\x18\a \x01(\tR\vcompanyLogo\"\xcc\x01\n" +
	"\x14CreateCompanyRequest\x12\x1b\n" +
	"\tfull_name\x18\x01 \x01(\tR\bfullName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x02 \x01(\tR\tshortName\x12%\n" +
	"\x0ebusiness_scope\x18\x03 \x01(\tR\rbusinessScope\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\x12!\n" +
	"\fcompany_logo\x18\x06 \x01(\tR\vcompanyLogo\"#\n" +
	"\x11GetCompanyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\xdc\x01\n" +
	"\x14UpdateCompanyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1b\n" +
	"\tfull_name\x18\x02 \x01(\tR\bfullName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x03 \x01(\tR\tshortName\x12%\n" +
	"\x0ebusiness_scope\x18\x04 \x01(\tR\rbusinessScope\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x06 \x01(\tR\x05phone\x12!\n" +
	"\fcompany_logo\x18\a \x01(\tR\vcompanyLogo\"&\n" +
	"\x14DeleteCompanyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"a\n" +
	"\x14ListCompaniesRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\"\x99\x01\n" +
	"\x15ListCompaniesResponse\x129\n" +
	"\tcompanies\x18\x01 \x03(\v2\x1b.api.company.v1.CompanyInfoR\tcompanies\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"8\n" +
	"\x17GetCompanyStoresRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\x04R\tcompanyId\"\xc6\x01\n" +
	"\x1bGetStoresByCompanyIDRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\x04R\tcompanyId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActive\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x05 \x01(\tR\tsortField\x12\x1b\n" +
	"\tsort_desc\x18\x06 \x01(\bR\bsortDesc\"\xce\x02\n" +
	"\tStoreInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1d\n" +
	"\n" +
	"store_name\x18\x02 \x01(\tR\tstoreName\x12\x1d\n" +
	"\n" +
	"company_id\x18\x03 \x01(\x04R\tcompanyId\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\x12%\n" +
	"\x0ebusiness_hours\x18\x06 \x01(\tR\rbusinessHours\x12\x16\n" +
	"\x06rating\x18\a \x01(\x01R\x06rating\x12!\n" +
	"\freview_count\x18\b \x01(\x05R\vreviewCount\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\x12!\n" +
	"\fcreated_time\x18\n" +
	" \x01(\tR\vcreatedTime\x12!\n" +
	"\fupdated_time\x18\v \x01(\tR\vupdatedTime\"\x81\x02\n" +
	"\x12CreateStoreRequest\x12\x1d\n" +
	"\n" +
	"store_name\x18\x01 \x01(\tR\tstoreName\x12\x1d\n" +
	"\n" +
	"company_id\x18\x02 \x01(\x04R\tcompanyId\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x04 \x01(\tR\x05phone\x12%\n" +
	"\x0ebusiness_hours\x18\x05 \x01(\tR\rbusinessHours\x12\x16\n" +
	"\x06rating\x18\x06 \x01(\x01R\x06rating\x12!\n" +
	"\freview_count\x18\a \x01(\x05R\vreviewCount\x12\x1b\n" +
	"\tis_active\x18\b \x01(\bR\bisActive\"!\n" +
	"\x0fGetStoreRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\x91\x02\n" +
	"\x12UpdateStoreRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1d\n" +
	"\n" +
	"store_name\x18\x02 \x01(\tR\tstoreName\x12\x1d\n" +
	"\n" +
	"company_id\x18\x03 \x01(\x04R\tcompanyId\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\x12%\n" +
	"\x0ebusiness_hours\x18\x06 \x01(\tR\rbusinessHours\x12\x16\n" +
	"\x06rating\x18\a \x01(\x01R\x06rating\x12!\n" +
	"\freview_count\x18\b \x01(\x05R\vreviewCount\x12\x1b\n" +
	"\tis_active\x18\t \x01(\bR\bisActive\"$\n" +
	"\x12DeleteStoreRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\xd6\x01\n" +
	"\x11ListStoresRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\x12\x1d\n" +
	"\n" +
	"company_id\x18\x04 \x01(\x04R\tcompanyId\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x06 \x01(\tR\tsortField\x12\x1b\n" +
	"\tsort_desc\x18\a \x01(\bR\bsortDesc\"\x8e\x01\n" +
	"\x12ListStoresResponse\x121\n" +
	"\x06stores\x18\x01 \x03(\v2\x19.api.company.v1.StoreInfoR\x06stores\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"4\n" +
	"\x17GetStoreRealtorsRequest\x12\x19\n" +
	"\bstore_id\x18\x01 \x01(\x04R\astoreId\"\xbf\x01\n" +
	"\x1bGetRealtorsByStoreIDRequest\x12\x19\n" +
	"\bstore_id\x18\x01 \x01(\x04R\astoreId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x04 \x01(\tR\akeyword\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x05 \x01(\tR\tsortField\x12\x1b\n" +
	"\tsort_desc\x18\x06 \x01(\bR\bsortDesc\"\xb1\x01\n" +
	"\x1aListAvailableStoresRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\x12\x1b\n" +
	"\ttime_slot\x18\x04 \x01(\tR\btimeSlot\x12\x12\n" +
	"\x04area\x18\x05 \x01(\tR\x04area\x12\x1d\n" +
	"\n" +
	"company_id\x18\x06 \x01(\x04R\tcompanyId\"\xd7\x03\n" +
	"\vRealtorInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12!\n" +
	"\frealtor_name\x18\x02 \x01(\tR\vrealtorName\x12#\n" +
	"\rbusiness_area\x18\x03 \x03(\tR\fbusinessArea\x12*\n" +
	"\x11second_hand_score\x18\x04 \x01(\x05R\x0fsecondHandScore\x12!\n" +
	"\frental_score\x18\x05 \x01(\x05R\vrentalScore\x12#\n" +
	"\rservice_years\x18\x06 \x01(\tR\fserviceYears\x120\n" +
	"\x14service_people_count\x18\a \x01(\x05R\x12servicePeopleCount\x12,\n" +
	"\x12main_business_area\x18\b \x03(\tR\x10mainBusinessArea\x124\n" +
	"\x16main_residential_areas\x18\t \x03(\tR\x14mainResidentialAreas\x12\x1d\n" +
	"\n" +
	"company_id\x18\n" +
	" \x01(\x04R\tcompanyId\x12\x19\n" +
	"\bstore_id\x18\v \x01(\x04R\astoreId\x12\x14\n" +
	"\x05phone\x18\f \x01(\tR\x05phone\x12\x16\n" +
	"\x06avatar\x18\r \x01(\tR\x06avatar\"\xd0\x03\n" +
	"\x14CreateRealtorRequest\x12!\n" +
	"\frealtor_name\x18\x01 \x01(\tR\vrealtorName\x12#\n" +
	"\rbusiness_area\x18\x02 \x03(\tR\fbusinessArea\x12*\n" +
	"\x11second_hand_score\x18\x03 \x01(\x05R\x0fsecondHandScore\x12!\n" +
	"\frental_score\x18\x04 \x01(\x05R\vrentalScore\x12#\n" +
	"\rservice_years\x18\x05 \x01(\tR\fserviceYears\x120\n" +
	"\x14service_people_count\x18\x06 \x01(\x05R\x12servicePeopleCount\x12,\n" +
	"\x12main_business_area\x18\a \x03(\tR\x10mainBusinessArea\x124\n" +
	"\x16main_residential_areas\x18\b \x03(\tR\x14mainResidentialAreas\x12\x1d\n" +
	"\n" +
	"company_id\x18\t \x01(\x04R\tcompanyId\x12\x19\n" +
	"\bstore_id\x18\n" +
	" \x01(\x04R\astoreId\x12\x14\n" +
	"\x05phone\x18\v \x01(\tR\x05phone\x12\x16\n" +
	"\x06avatar\x18\f \x01(\tR\x06avatar\"#\n" +
	"\x11GetRealtorRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\xe0\x03\n" +
	"\x14UpdateRealtorRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12!\n" +
	"\frealtor_name\x18\x02 \x01(\tR\vrealtorName\x12#\n" +
	"\rbusiness_area\x18\x03 \x03(\tR\fbusinessArea\x12*\n" +
	"\x11second_hand_score\x18\x04 \x01(\x05R\x0fsecondHandScore\x12!\n" +
	"\frental_score\x18\x05 \x01(\x05R\vrentalScore\x12#\n" +
	"\rservice_years\x18\x06 \x01(\tR\fserviceYears\x120\n" +
	"\x14service_people_count\x18\a \x01(\x05R\x12servicePeopleCount\x12,\n" +
	"\x12main_business_area\x18\b \x03(\tR\x10mainBusinessArea\x124\n" +
	"\x16main_residential_areas\x18\t \x03(\tR\x14mainResidentialAreas\x12\x1d\n" +
	"\n" +
	"company_id\x18\n" +
	" \x01(\x04R\tcompanyId\x12\x19\n" +
	"\bstore_id\x18\v \x01(\x04R\astoreId\x12\x14\n" +
	"\x05phone\x18\f \x01(\tR\x05phone\x12\x16\n" +
	"\x06avatar\x18\r \x01(\tR\x06avatar\"&\n" +
	"\x14DeleteRealtorRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\xd6\x01\n" +
	"\x13ListRealtorsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x18\n" +
	"\akeyword\x18\x03 \x01(\tR\akeyword\x12\x19\n" +
	"\bstore_id\x18\x04 \x01(\x04R\astoreId\x12\x1d\n" +
	"\n" +
	"company_id\x18\x05 \x01(\x04R\tcompanyId\x12\x1d\n" +
	"\n" +
	"sort_field\x18\x06 \x01(\tR\tsortField\x12\x1b\n" +
	"\tsort_desc\x18\a \x01(\bR\bsortDesc\"\x96\x01\n" +
	"\x14ListRealtorsResponse\x127\n" +
	"\brealtors\x18\x01 \x03(\v2\x1b.api.company.v1.RealtorInfoR\brealtors\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"8\n" +
	"\x17GetRealtorStatusRequest\x12\x1d\n" +
	"\n" +
	"realtor_id\x18\x01 \x01(\x04R\trealtorId\"\xd1\x01\n" +
	"\x11RealtorStatusInfo\x12\x1d\n" +
	"\n" +
	"realtor_id\x18\x01 \x01(\x04R\trealtorId\x125\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1d.api.company.v1.RealtorStatusR\x06status\x12!\n" +
	"\fcurrent_load\x18\x03 \x01(\x05R\vcurrentLoad\x12\x19\n" +
	"\bmax_load\x18\x04 \x01(\x05R\amaxLoad\x12(\n" +
	"\x10last_active_time\x18\x05 \x01(\tR\x0elastActiveTime\"\x8d\x01\n" +
	"\x1aUpdateRealtorStatusRequest\x12\x1d\n" +
	"\n" +
	"realtor_id\x18\x01 \x01(\x04R\trealtorId\x125\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1d.api.company.v1.RealtorStatusR\x06status\x12\x19\n" +
	"\bmax_load\x18\x03 \x01(\x05R\amaxLoad\"\x90\x02\n" +
	"\bTimeSlot\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\tR\aendTime\x12\x1c\n" +
	"\tavailable\x18\x04 \x01(\bR\tavailable\x12-\n" +
	"\x12available_realtors\x18\x05 \x01(\x05R\x11availableRealtors\x12%\n" +
	"\x0etotal_capacity\x18\x06 \x01(\x05R\rtotalCapacity\x12!\n" +
	"\fbooked_count\x18\a \x01(\x05R\vbookedCount\x12\x1f\n" +
	"\vqueue_count\x18\b \x01(\x05R\n" +
	"queueCount\"\xe0\x05\n" +
	"\x0fAppointmentInfo\x12%\n" +
	"\x0eappointment_id\x18\x01 \x01(\x04R\rappointmentId\x12)\n" +
	"\x10appointment_code\x18\x02 \x01(\tR\x0fappointmentCode\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x19\n" +
	"\bstore_id\x18\x04 \x01(\x04R\astoreId\x12\x1d\n" +
	"\n" +
	"realtor_id\x18\x05 \x01(\x04R\trealtorId\x12!\n" +
	"\frealtor_name\x18\x06 \x01(\tR\vrealtorName\x12#\n" +
	"\rrealtor_phone\x18\a \x01(\tR\frealtorPhone\x12#\n" +
	"\rcustomer_name\x18\b \x01(\tR\fcustomerName\x12%\n" +
	"\x0ecustomer_phone\x18\t \x01(\tR\rcustomerPhone\x12)\n" +
	"\x10appointment_date\x18\n" +
	" \x01(\tR\x0fappointmentDate\x12\x1d\n" +
	"\n" +
	"start_time\x18\v \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\f \x01(\tR\aendTime\x12)\n" +
	"\x10duration_minutes\x18\r \x01(\x05R\x0fdurationMinutes\x12\"\n" +
	"\frequirements\x18\x0e \x01(\tR\frequirements\x129\n" +
	"\x06status\x18\x0f \x01(\x0e2!.api.company.v1.AppointmentStatusR\x06status\x12%\n" +
	"\x0equeue_position\x18\x10 \x01(\x05R\rqueuePosition\x124\n" +
	"\x16estimated_wait_minutes\x18\x11 \x01(\x05R\x14estimatedWaitMinutes\x12!\n" +
	"\fcreated_time\x18\x12 \x01(\tR\vcreatedTime\x12%\n" +
	"\x0econfirmed_time\x18\x13 \x01(\tR\rconfirmedTime*\xe1\x01\n" +
	"\x11AppointmentStatus\x12\"\n" +
	"\x1eAPPOINTMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aAPPOINTMENT_STATUS_PENDING\x10\x01\x12 \n" +
	"\x1cAPPOINTMENT_STATUS_CONFIRMED\x10\x02\x12\"\n" +
	"\x1eAPPOINTMENT_STATUS_IN_PROGRESS\x10\x03\x12 \n" +
	"\x1cAPPOINTMENT_STATUS_COMPLETED\x10\x04\x12 \n" +
	"\x1cAPPOINTMENT_STATUS_CANCELLED\x10\x05*\x7f\n" +
	"\rRealtorStatus\x12\x1e\n" +
	"\x1aREALTOR_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15REALTOR_STATUS_ONLINE\x10\x01\x12\x1a\n" +
	"\x16REALTOR_STATUS_OFFLINE\x10\x02\x12\x17\n" +
	"\x13REALTOR_STATUS_BUSY\x10\x032\xcf\x06\n" +
	"\aCompany\x12m\n" +
	"\rCreateCompany\x12$.api.company.v1.CreateCompanyRequest\x1a\x1b.api.common.v1.BaseResponse\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/api/companies\x12i\n" +
	"\n" +
	"GetCompany\x12!.api.company.v1.GetCompanyRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/api/companies/{id}\x12r\n" +
	"\rUpdateCompany\x12$.api.company.v1.UpdateCompanyRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\x1a\x13/api/companies/{id}\x12o\n" +
	"\rDeleteCompany\x12$.api.company.v1.DeleteCompanyRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/api/companies/{id}\x12j\n" +
	"\rListCompanies\x12$.api.company.v1.ListCompaniesRequest\x1a\x1b.api.common.v1.BaseResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/companies\x12\x84\x01\n" +
	"\x10GetCompanyStores\x12'.api.company.v1.GetCompanyStoresRequest\x1a\x1b.api.common.v1.BaseResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/api/companies/{company_id}/stores\x12\x91\x01\n" +
	"\x14GetStoresByCompanyID\x12+.api.company.v1.GetStoresByCompanyIDRequest\x1a\x1b.api.common.v1.BaseResponse\"/\x82\xd3\xe4\x93\x02)\x12'/api/companies/{company_id}/stores/page2\xa1\a\n" +
	"\x05Store\x12f\n" +
	"\vCreateStore\x12\".api.company.v1.CreateStoreRequest\x1a\x1b.api.common.v1.BaseResponse\"\x16\x82\xd3\xe4\x93\x02\x10:\x01*\"\v/api/stores\x12b\n" +
	"\bGetStore\x12\x1f.api.company.v1.GetStoreRequest\x1a\x1b.api.common.v1.BaseResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/api/stores/{id}\x12k\n" +
	"\vUpdateStore\x12\".api.company.v1.UpdateStoreRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\x1a\x10/api/stores/{id}\x12h\n" +
	"\vDeleteStore\x12\".api.company.v1.DeleteStoreRequest\x1a\x1b.api.common.v1.BaseResponse\"\x18\x82\xd3\xe4\x93\x02\x12*\x10/api/stores/{id}\x12a\n" +
	"\n" +
	"ListStores\x12!.api.company.v1.ListStoresRequest\x1a\x1b.api.common.v1.BaseResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/api/stores\x12\x81\x01\n" +
	"\x10GetStoreRealtors\x12'.api.company.v1.GetStoreRealtorsRequest\x1a\x1b.api.common.v1.BaseResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/api/stores/{store_id}/realtors\x12\x8e\x01\n" +
	"\x14GetRealtorsByStoreID\x12+.api.company.v1.GetRealtorsByStoreIDRequest\x1a\x1b.api.common.v1.BaseResponse\",\x82\xd3\xe4\x93\x02&\x12$/api/stores/{store_id}/realtors/page\x12}\n" +
	"\x13ListAvailableStores\x12*.api.company.v1.ListAvailableStoresRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/stores/available2\xc2\x06\n" +
	"\aRealtor\x12l\n" +
	"\rCreateRealtor\x12$.api.company.v1.CreateRealtorRequest\x1a\x1b.api.common.v1.BaseResponse\"\x18\x82\xd3\xe4\x93\x02\x12:\x01*\"\r/api/realtors\x12h\n" +
	"\n" +
	"GetRealtor\x12!.api.company.v1.GetRealtorRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/api/realtors/{id}\x12q\n" +
	"\rUpdateRealtor\x12$.api.company.v1.UpdateRealtorRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\x1a\x12/api/realtors/{id}\x12n\n" +
	"\rDeleteRealtor\x12$.api.company.v1.DeleteRealtorRequest\x1a\x1b.api.common.v1.BaseResponse\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/api/realtors/{id}\x12g\n" +
	"\fListRealtors\x12#.api.company.v1.ListRealtorsRequest\x1a\x1b.api.common.v1.BaseResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/api/realtors\x12\x83\x01\n" +
	"\x10GetRealtorStatus\x12'.api.company.v1.GetRealtorStatusRequest\x1a\x1b.api.common.v1.BaseResponse\")\x82\xd3\xe4\x93\x02#\x12!/api/realtors/{realtor_id}/status\x12\x8c\x01\n" +
	"\x13UpdateRealtorStatus\x12*.api.company.v1.UpdateRealtorStatusRequest\x1a\x1b.api.common.v1.BaseResponse\",\x82\xd3\xe4\x93\x02&:\x01*\x1a!/api/realtors/{realtor_id}/statusBC\n" +
	"\x0eapi.company.v1B\x0eCompanyProtoV1P\x01Z\x1fanjuke/server/api/company/v1;v1b\x06proto3"

var (
	file_company_v1_company_proto_rawDescOnce sync.Once
	file_company_v1_company_proto_rawDescData []byte
)

func file_company_v1_company_proto_rawDescGZIP() []byte {
	file_company_v1_company_proto_rawDescOnce.Do(func() {
		file_company_v1_company_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_company_v1_company_proto_rawDesc), len(file_company_v1_company_proto_rawDesc)))
	})
	return file_company_v1_company_proto_rawDescData
}

var file_company_v1_company_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_company_v1_company_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_company_v1_company_proto_goTypes = []any{
	(AppointmentStatus)(0),              // 0: api.company.v1.AppointmentStatus
	(RealtorStatus)(0),                  // 1: api.company.v1.RealtorStatus
	(*CompanyInfo)(nil),                 // 2: api.company.v1.CompanyInfo
	(*CreateCompanyRequest)(nil),        // 3: api.company.v1.CreateCompanyRequest
	(*GetCompanyRequest)(nil),           // 4: api.company.v1.GetCompanyRequest
	(*UpdateCompanyRequest)(nil),        // 5: api.company.v1.UpdateCompanyRequest
	(*DeleteCompanyRequest)(nil),        // 6: api.company.v1.DeleteCompanyRequest
	(*ListCompaniesRequest)(nil),        // 7: api.company.v1.ListCompaniesRequest
	(*ListCompaniesResponse)(nil),       // 8: api.company.v1.ListCompaniesResponse
	(*GetCompanyStoresRequest)(nil),     // 9: api.company.v1.GetCompanyStoresRequest
	(*GetStoresByCompanyIDRequest)(nil), // 10: api.company.v1.GetStoresByCompanyIDRequest
	(*StoreInfo)(nil),                   // 11: api.company.v1.StoreInfo
	(*CreateStoreRequest)(nil),          // 12: api.company.v1.CreateStoreRequest
	(*GetStoreRequest)(nil),             // 13: api.company.v1.GetStoreRequest
	(*UpdateStoreRequest)(nil),          // 14: api.company.v1.UpdateStoreRequest
	(*DeleteStoreRequest)(nil),          // 15: api.company.v1.DeleteStoreRequest
	(*ListStoresRequest)(nil),           // 16: api.company.v1.ListStoresRequest
	(*ListStoresResponse)(nil),          // 17: api.company.v1.ListStoresResponse
	(*GetStoreRealtorsRequest)(nil),     // 18: api.company.v1.GetStoreRealtorsRequest
	(*GetRealtorsByStoreIDRequest)(nil), // 19: api.company.v1.GetRealtorsByStoreIDRequest
	(*ListAvailableStoresRequest)(nil),  // 20: api.company.v1.ListAvailableStoresRequest
	(*RealtorInfo)(nil),                 // 21: api.company.v1.RealtorInfo
	(*CreateRealtorRequest)(nil),        // 22: api.company.v1.CreateRealtorRequest
	(*GetRealtorRequest)(nil),           // 23: api.company.v1.GetRealtorRequest
	(*UpdateRealtorRequest)(nil),        // 24: api.company.v1.UpdateRealtorRequest
	(*DeleteRealtorRequest)(nil),        // 25: api.company.v1.DeleteRealtorRequest
	(*ListRealtorsRequest)(nil),         // 26: api.company.v1.ListRealtorsRequest
	(*ListRealtorsResponse)(nil),        // 27: api.company.v1.ListRealtorsResponse
	(*GetRealtorStatusRequest)(nil),     // 28: api.company.v1.GetRealtorStatusRequest
	(*RealtorStatusInfo)(nil),           // 29: api.company.v1.RealtorStatusInfo
	(*UpdateRealtorStatusRequest)(nil),  // 30: api.company.v1.UpdateRealtorStatusRequest
	(*TimeSlot)(nil),                    // 31: api.company.v1.TimeSlot
	(*AppointmentInfo)(nil),             // 32: api.company.v1.AppointmentInfo
	(*v1.BaseResponse)(nil),             // 33: api.common.v1.BaseResponse
}
var file_company_v1_company_proto_depIdxs = []int32{
	2,  // 0: api.company.v1.ListCompaniesResponse.companies:type_name -> api.company.v1.CompanyInfo
	11, // 1: api.company.v1.ListStoresResponse.stores:type_name -> api.company.v1.StoreInfo
	21, // 2: api.company.v1.ListRealtorsResponse.realtors:type_name -> api.company.v1.RealtorInfo
	1,  // 3: api.company.v1.RealtorStatusInfo.status:type_name -> api.company.v1.RealtorStatus
	1,  // 4: api.company.v1.UpdateRealtorStatusRequest.status:type_name -> api.company.v1.RealtorStatus
	0,  // 5: api.company.v1.AppointmentInfo.status:type_name -> api.company.v1.AppointmentStatus
	3,  // 6: api.company.v1.Company.CreateCompany:input_type -> api.company.v1.CreateCompanyRequest
	4,  // 7: api.company.v1.Company.GetCompany:input_type -> api.company.v1.GetCompanyRequest
	5,  // 8: api.company.v1.Company.UpdateCompany:input_type -> api.company.v1.UpdateCompanyRequest
	6,  // 9: api.company.v1.Company.DeleteCompany:input_type -> api.company.v1.DeleteCompanyRequest
	7,  // 10: api.company.v1.Company.ListCompanies:input_type -> api.company.v1.ListCompaniesRequest
	9,  // 11: api.company.v1.Company.GetCompanyStores:input_type -> api.company.v1.GetCompanyStoresRequest
	10, // 12: api.company.v1.Company.GetStoresByCompanyID:input_type -> api.company.v1.GetStoresByCompanyIDRequest
	12, // 13: api.company.v1.Store.CreateStore:input_type -> api.company.v1.CreateStoreRequest
	13, // 14: api.company.v1.Store.GetStore:input_type -> api.company.v1.GetStoreRequest
	14, // 15: api.company.v1.Store.UpdateStore:input_type -> api.company.v1.UpdateStoreRequest
	15, // 16: api.company.v1.Store.DeleteStore:input_type -> api.company.v1.DeleteStoreRequest
	16, // 17: api.company.v1.Store.ListStores:input_type -> api.company.v1.ListStoresRequest
	18, // 18: api.company.v1.Store.GetStoreRealtors:input_type -> api.company.v1.GetStoreRealtorsRequest
	19, // 19: api.company.v1.Store.GetRealtorsByStoreID:input_type -> api.company.v1.GetRealtorsByStoreIDRequest
	20, // 20: api.company.v1.Store.ListAvailableStores:input_type -> api.company.v1.ListAvailableStoresRequest
	22, // 21: api.company.v1.Realtor.CreateRealtor:input_type -> api.company.v1.CreateRealtorRequest
	23, // 22: api.company.v1.Realtor.GetRealtor:input_type -> api.company.v1.GetRealtorRequest
	24, // 23: api.company.v1.Realtor.UpdateRealtor:input_type -> api.company.v1.UpdateRealtorRequest
	25, // 24: api.company.v1.Realtor.DeleteRealtor:input_type -> api.company.v1.DeleteRealtorRequest
	26, // 25: api.company.v1.Realtor.ListRealtors:input_type -> api.company.v1.ListRealtorsRequest
	28, // 26: api.company.v1.Realtor.GetRealtorStatus:input_type -> api.company.v1.GetRealtorStatusRequest
	30, // 27: api.company.v1.Realtor.UpdateRealtorStatus:input_type -> api.company.v1.UpdateRealtorStatusRequest
	33, // 28: api.company.v1.Company.CreateCompany:output_type -> api.common.v1.BaseResponse
	33, // 29: api.company.v1.Company.GetCompany:output_type -> api.common.v1.BaseResponse
	33, // 30: api.company.v1.Company.UpdateCompany:output_type -> api.common.v1.BaseResponse
	33, // 31: api.company.v1.Company.DeleteCompany:output_type -> api.common.v1.BaseResponse
	33, // 32: api.company.v1.Company.ListCompanies:output_type -> api.common.v1.BaseResponse
	33, // 33: api.company.v1.Company.GetCompanyStores:output_type -> api.common.v1.BaseResponse
	33, // 34: api.company.v1.Company.GetStoresByCompanyID:output_type -> api.common.v1.BaseResponse
	33, // 35: api.company.v1.Store.CreateStore:output_type -> api.common.v1.BaseResponse
	33, // 36: api.company.v1.Store.GetStore:output_type -> api.common.v1.BaseResponse
	33, // 37: api.company.v1.Store.UpdateStore:output_type -> api.common.v1.BaseResponse
	33, // 38: api.company.v1.Store.DeleteStore:output_type -> api.common.v1.BaseResponse
	33, // 39: api.company.v1.Store.ListStores:output_type -> api.common.v1.BaseResponse
	33, // 40: api.company.v1.Store.GetStoreRealtors:output_type -> api.common.v1.BaseResponse
	33, // 41: api.company.v1.Store.GetRealtorsByStoreID:output_type -> api.common.v1.BaseResponse
	33, // 42: api.company.v1.Store.ListAvailableStores:output_type -> api.common.v1.BaseResponse
	33, // 43: api.company.v1.Realtor.CreateRealtor:output_type -> api.common.v1.BaseResponse
	33, // 44: api.company.v1.Realtor.GetRealtor:output_type -> api.common.v1.BaseResponse
	33, // 45: api.company.v1.Realtor.UpdateRealtor:output_type -> api.common.v1.BaseResponse
	33, // 46: api.company.v1.Realtor.DeleteRealtor:output_type -> api.common.v1.BaseResponse
	33, // 47: api.company.v1.Realtor.ListRealtors:output_type -> api.common.v1.BaseResponse
	33, // 48: api.company.v1.Realtor.GetRealtorStatus:output_type -> api.common.v1.BaseResponse
	33, // 49: api.company.v1.Realtor.UpdateRealtorStatus:output_type -> api.common.v1.BaseResponse
	28, // [28:50] is the sub-list for method output_type
	6,  // [6:28] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_company_v1_company_proto_init() }
func file_company_v1_company_proto_init() {
	if File_company_v1_company_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_company_v1_company_proto_rawDesc), len(file_company_v1_company_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_company_v1_company_proto_goTypes,
		DependencyIndexes: file_company_v1_company_proto_depIdxs,
		EnumInfos:         file_company_v1_company_proto_enumTypes,
		MessageInfos:      file_company_v1_company_proto_msgTypes,
	}.Build()
	File_company_v1_company_proto = out.File
	file_company_v1_company_proto_goTypes = nil
	file_company_v1_company_proto_depIdxs = nil
}
