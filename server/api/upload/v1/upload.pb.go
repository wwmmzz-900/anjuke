// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: upload/v1/upload.proto

package uploadv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 初始化上传请求
type InitUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                          // 文件名
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // 内容类型
	TotalSize     int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`      // 总大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitUploadRequest) Reset() {
	*x = InitUploadRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitUploadRequest) ProtoMessage() {}

func (x *InitUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitUploadRequest.ProtoReflect.Descriptor instead.
func (*InitUploadRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{0}
}

func (x *InitUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *InitUploadRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *InitUploadRequest) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// 初始化上传响应
type InitUploadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`       // 上传ID
	ObjectName    string                 `protobuf:"bytes,2,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"` // 对象名称
	ChunkSize     int64                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`   // 分片大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitUploadReply) Reset() {
	*x = InitUploadReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitUploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitUploadReply) ProtoMessage() {}

func (x *InitUploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitUploadReply.ProtoReflect.Descriptor instead.
func (*InitUploadReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{1}
}

func (x *InitUploadReply) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *InitUploadReply) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *InitUploadReply) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

// 上传分片请求
type UploadPartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`        // 上传ID
	ObjectName    string                 `protobuf:"bytes,2,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`  // 对象名称
	PartNumber    int32                  `protobuf:"varint,3,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"` // 分片序号
	FileData      []byte                 `protobuf:"bytes,4,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`        // 文件内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartRequest) Reset() {
	*x = UploadPartRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartRequest) ProtoMessage() {}

func (x *UploadPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartRequest.ProtoReflect.Descriptor instead.
func (*UploadPartRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{2}
}

func (x *UploadPartRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadPartRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *UploadPartRequest) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

// 上传分片响应
type UploadPartReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"` // 分片序号
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`                                // ETag
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                               // 分片大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartReply) Reset() {
	*x = UploadPartReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartReply) ProtoMessage() {}

func (x *UploadPartReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartReply.ProtoReflect.Descriptor instead.
func (*UploadPartReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{3}
}

func (x *UploadPartReply) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartReply) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *UploadPartReply) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 分片信息
type PartInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"` // 分片序号
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`                                // ETag
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                               // 分片大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartInfo) Reset() {
	*x = PartInfo{}
	mi := &file_upload_v1_upload_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartInfo) ProtoMessage() {}

func (x *PartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartInfo.ProtoReflect.Descriptor instead.
func (*PartInfo) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{4}
}

func (x *PartInfo) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *PartInfo) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *PartInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 完成上传请求
type CompleteUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`       // 上传ID
	ObjectName    string                 `protobuf:"bytes,2,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"` // 对象名称
	Parts         []*PartInfo            `protobuf:"bytes,3,rep,name=parts,proto3" json:"parts,omitempty"`                             // 分片信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteUploadRequest) Reset() {
	*x = CompleteUploadRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUploadRequest) ProtoMessage() {}

func (x *CompleteUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteUploadRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{5}
}

func (x *CompleteUploadRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CompleteUploadRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *CompleteUploadRequest) GetParts() []*PartInfo {
	if x != nil {
		return x.Parts
	}
	return nil
}

// 完成上传响应
type CompleteUploadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 文件URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteUploadReply) Reset() {
	*x = CompleteUploadReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteUploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUploadReply) ProtoMessage() {}

func (x *CompleteUploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUploadReply.ProtoReflect.Descriptor instead.
func (*CompleteUploadReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteUploadReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 查询分片请求
type ListPartsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`       // 上传ID
	ObjectName    string                 `protobuf:"bytes,2,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"` // 对象名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartsRequest) Reset() {
	*x = ListPartsRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartsRequest) ProtoMessage() {}

func (x *ListPartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartsRequest.ProtoReflect.Descriptor instead.
func (*ListPartsRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{7}
}

func (x *ListPartsRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *ListPartsRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

// 查询分片响应
type ListPartsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parts         []*PartInfo            `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"` // 分片信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartsReply) Reset() {
	*x = ListPartsReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartsReply) ProtoMessage() {}

func (x *ListPartsReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartsReply.ProtoReflect.Descriptor instead.
func (*ListPartsReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{8}
}

func (x *ListPartsReply) GetParts() []*PartInfo {
	if x != nil {
		return x.Parts
	}
	return nil
}

// 中止上传请求
type AbortUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`       // 上传ID
	ObjectName    string                 `protobuf:"bytes,2,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"` // 对象名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortUploadRequest) Reset() {
	*x = AbortUploadRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortUploadRequest) ProtoMessage() {}

func (x *AbortUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortUploadRequest.ProtoReflect.Descriptor instead.
func (*AbortUploadRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{9}
}

func (x *AbortUploadRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *AbortUploadRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

// 中止上传响应
type AbortUploadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortUploadReply) Reset() {
	*x = AbortUploadReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortUploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortUploadReply) ProtoMessage() {}

func (x *AbortUploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortUploadReply.ProtoReflect.Descriptor instead.
func (*AbortUploadReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{10}
}

func (x *AbortUploadReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 简单上传请求
type SimpleUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                          // 文件名
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // 内容类型
	FileData      []byte                 `protobuf:"bytes,3,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`          // 文件内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleUploadRequest) Reset() {
	*x = SimpleUploadRequest{}
	mi := &file_upload_v1_upload_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleUploadRequest) ProtoMessage() {}

func (x *SimpleUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleUploadRequest.ProtoReflect.Descriptor instead.
func (*SimpleUploadRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{11}
}

func (x *SimpleUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SimpleUploadRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *SimpleUploadRequest) GetFileData() []byte {
	if x != nil {
		return x.FileData
	}
	return nil
}

// 简单上传响应
type SimpleUploadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 文件URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleUploadReply) Reset() {
	*x = SimpleUploadReply{}
	mi := &file_upload_v1_upload_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleUploadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleUploadReply) ProtoMessage() {}

func (x *SimpleUploadReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleUploadReply.ProtoReflect.Descriptor instead.
func (*SimpleUploadReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{12}
}

func (x *SimpleUploadReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_upload_v1_upload_proto protoreflect.FileDescriptor

const file_upload_v1_upload_proto_rawDesc = "" +
	"\n" +
	"\x16upload/v1/upload.proto\x12\rapi.upload.v1\x1a\x1cgoogle/api/annotations.proto\"q\n" +
	"\x11InitUploadRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\"n\n" +
	"\x0fInitUploadReply\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1f\n" +
	"\vobject_name\x18\x02 \x01(\tR\n" +
	"objectName\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x03R\tchunkSize\"\x8f\x01\n" +
	"\x11UploadPartRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1f\n" +
	"\vobject_name\x18\x02 \x01(\tR\n" +
	"objectName\x12\x1f\n" +
	"\vpart_number\x18\x03 \x01(\x05R\n" +
	"partNumber\x12\x1b\n" +
	"\tfile_data\x18\x04 \x01(\fR\bfileData\"Z\n" +
	"\x0fUploadPartReply\x12\x1f\n" +
	"\vpart_number\x18\x01 \x01(\x05R\n" +
	"partNumber\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"S\n" +
	"\bPartInfo\x12\x1f\n" +
	"\vpart_number\x18\x01 \x01(\x05R\n" +
	"partNumber\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"\x84\x01\n" +
	"\x15CompleteUploadRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1f\n" +
	"\vobject_name\x18\x02 \x01(\tR\n" +
	"objectName\x12-\n" +
	"\x05parts\x18\x03 \x03(\v2\x17.api.upload.v1.PartInfoR\x05parts\"'\n" +
	"\x13CompleteUploadReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"P\n" +
	"\x10ListPartsRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1f\n" +
	"\vobject_name\x18\x02 \x01(\tR\n" +
	"objectName\"?\n" +
	"\x0eListPartsReply\x12-\n" +
	"\x05parts\x18\x01 \x03(\v2\x17.api.upload.v1.PartInfoR\x05parts\"R\n" +
	"\x12AbortUploadRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1f\n" +
	"\vobject_name\x18\x02 \x01(\tR\n" +
	"objectName\",\n" +
	"\x10AbortUploadReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"q\n" +
	"\x13SimpleUploadRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1b\n" +
	"\tfile_data\x18\x03 \x01(\fR\bfileData\"%\n" +
	"\x11SimpleUploadReply\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url2\x9f\x04\n" +
	"\rUploadService\x12N\n" +
	"\n" +
	"InitUpload\x12 .api.upload.v1.InitUploadRequest\x1a\x1e.api.upload.v1.InitUploadReply\x12N\n" +
	"\n" +
	"UploadPart\x12 .api.upload.v1.UploadPartRequest\x1a\x1e.api.upload.v1.UploadPartReply\x12Z\n" +
	"\x0eCompleteUpload\x12$.api.upload.v1.CompleteUploadRequest\x1a\".api.upload.v1.CompleteUploadReply\x12K\n" +
	"\tListParts\x12\x1f.api.upload.v1.ListPartsRequest\x1a\x1d.api.upload.v1.ListPartsReply\x12Q\n" +
	"\vAbortUpload\x12!.api.upload.v1.AbortUploadRequest\x1a\x1f.api.upload.v1.AbortUploadReply\x12r\n" +
	"\fSimpleUpload\x12\".api.upload.v1.SimpleUploadRequest\x1a .api.upload.v1.SimpleUploadReply\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/api/upload/smartB&Z$anjuke/server/api/upload/v1;uploadv1b\x06proto3"

var (
	file_upload_v1_upload_proto_rawDescOnce sync.Once
	file_upload_v1_upload_proto_rawDescData []byte
)

func file_upload_v1_upload_proto_rawDescGZIP() []byte {
	file_upload_v1_upload_proto_rawDescOnce.Do(func() {
		file_upload_v1_upload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_upload_v1_upload_proto_rawDesc), len(file_upload_v1_upload_proto_rawDesc)))
	})
	return file_upload_v1_upload_proto_rawDescData
}

var file_upload_v1_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_upload_v1_upload_proto_goTypes = []any{
	(*InitUploadRequest)(nil),     // 0: api.upload.v1.InitUploadRequest
	(*InitUploadReply)(nil),       // 1: api.upload.v1.InitUploadReply
	(*UploadPartRequest)(nil),     // 2: api.upload.v1.UploadPartRequest
	(*UploadPartReply)(nil),       // 3: api.upload.v1.UploadPartReply
	(*PartInfo)(nil),              // 4: api.upload.v1.PartInfo
	(*CompleteUploadRequest)(nil), // 5: api.upload.v1.CompleteUploadRequest
	(*CompleteUploadReply)(nil),   // 6: api.upload.v1.CompleteUploadReply
	(*ListPartsRequest)(nil),      // 7: api.upload.v1.ListPartsRequest
	(*ListPartsReply)(nil),        // 8: api.upload.v1.ListPartsReply
	(*AbortUploadRequest)(nil),    // 9: api.upload.v1.AbortUploadRequest
	(*AbortUploadReply)(nil),      // 10: api.upload.v1.AbortUploadReply
	(*SimpleUploadRequest)(nil),   // 11: api.upload.v1.SimpleUploadRequest
	(*SimpleUploadReply)(nil),     // 12: api.upload.v1.SimpleUploadReply
}
var file_upload_v1_upload_proto_depIdxs = []int32{
	4,  // 0: api.upload.v1.CompleteUploadRequest.parts:type_name -> api.upload.v1.PartInfo
	4,  // 1: api.upload.v1.ListPartsReply.parts:type_name -> api.upload.v1.PartInfo
	0,  // 2: api.upload.v1.UploadService.InitUpload:input_type -> api.upload.v1.InitUploadRequest
	2,  // 3: api.upload.v1.UploadService.UploadPart:input_type -> api.upload.v1.UploadPartRequest
	5,  // 4: api.upload.v1.UploadService.CompleteUpload:input_type -> api.upload.v1.CompleteUploadRequest
	7,  // 5: api.upload.v1.UploadService.ListParts:input_type -> api.upload.v1.ListPartsRequest
	9,  // 6: api.upload.v1.UploadService.AbortUpload:input_type -> api.upload.v1.AbortUploadRequest
	11, // 7: api.upload.v1.UploadService.SimpleUpload:input_type -> api.upload.v1.SimpleUploadRequest
	1,  // 8: api.upload.v1.UploadService.InitUpload:output_type -> api.upload.v1.InitUploadReply
	3,  // 9: api.upload.v1.UploadService.UploadPart:output_type -> api.upload.v1.UploadPartReply
	6,  // 10: api.upload.v1.UploadService.CompleteUpload:output_type -> api.upload.v1.CompleteUploadReply
	8,  // 11: api.upload.v1.UploadService.ListParts:output_type -> api.upload.v1.ListPartsReply
	10, // 12: api.upload.v1.UploadService.AbortUpload:output_type -> api.upload.v1.AbortUploadReply
	12, // 13: api.upload.v1.UploadService.SimpleUpload:output_type -> api.upload.v1.SimpleUploadReply
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_upload_v1_upload_proto_init() }
func file_upload_v1_upload_proto_init() {
	if File_upload_v1_upload_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_upload_v1_upload_proto_rawDesc), len(file_upload_v1_upload_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_upload_v1_upload_proto_goTypes,
		DependencyIndexes: file_upload_v1_upload_proto_depIdxs,
		MessageInfos:      file_upload_v1_upload_proto_msgTypes,
	}.Build()
	File_upload_v1_upload_proto = out.File
	file_upload_v1_upload_proto_goTypes = nil
	file_upload_v1_upload_proto_depIdxs = nil
}
