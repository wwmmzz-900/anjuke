// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: api/blacklist/v1/blacklist.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddToBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 被拉黑的用户ID
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                // 拉黑原因
}

func (x *AddToBlacklistRequest) Reset() {
	*x = AddToBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBlacklistRequest) ProtoMessage() {}

func (x *AddToBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBlacklistRequest.ProtoReflect.Descriptor instead.
func (*AddToBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{0}
}

func (x *AddToBlacklistRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddToBlacklistRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AddToBlacklistReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	BlacklistId int64  `protobuf:"varint,3,opt,name=blacklist_id,json=blacklistId,proto3" json:"blacklist_id,omitempty"` // 黑名单记录ID
}

func (x *AddToBlacklistReply) Reset() {
	*x = AddToBlacklistReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToBlacklistReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBlacklistReply) ProtoMessage() {}

func (x *AddToBlacklistReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBlacklistReply.ProtoReflect.Descriptor instead.
func (*AddToBlacklistReply) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{1}
}

func (x *AddToBlacklistReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddToBlacklistReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddToBlacklistReply) GetBlacklistId() int64 {
	if x != nil {
		return x.BlacklistId
	}
	return 0
}

type RemoveFromBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 要移除的用户ID
}

func (x *RemoveFromBlacklistRequest) Reset() {
	*x = RemoveFromBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBlacklistRequest) ProtoMessage() {}

func (x *RemoveFromBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBlacklistRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveFromBlacklistRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RemoveFromBlacklistReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemoveFromBlacklistReply) Reset() {
	*x = RemoveFromBlacklistReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromBlacklistReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBlacklistReply) ProtoMessage() {}

func (x *RemoveFromBlacklistReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBlacklistReply.ProtoReflect.Descriptor instead.
func (*RemoveFromBlacklistReply) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveFromBlacklistReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveFromBlacklistReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CheckBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 要检查的用户ID
}

func (x *CheckBlacklistRequest) Reset() {
	*x = CheckBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlacklistRequest) ProtoMessage() {}

func (x *CheckBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlacklistRequest.ProtoReflect.Descriptor instead.
func (*CheckBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{4}
}

func (x *CheckBlacklistRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckBlacklistReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBlacklisted bool   `protobuf:"varint,1,opt,name=is_blacklisted,json=isBlacklisted,proto3" json:"is_blacklisted,omitempty"` // 是否在黑名单中
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                                     // 拉黑原因
	CreatedAt     string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`              // 拉黑时间
}

func (x *CheckBlacklistReply) Reset() {
	*x = CheckBlacklistReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBlacklistReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlacklistReply) ProtoMessage() {}

func (x *CheckBlacklistReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlacklistReply.ProtoReflect.Descriptor instead.
func (*CheckBlacklistReply) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{5}
}

func (x *CheckBlacklistReply) GetIsBlacklisted() bool {
	if x != nil {
		return x.IsBlacklisted
	}
	return false
}

func (x *CheckBlacklistReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CheckBlacklistReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetBlacklistListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页大小
}

func (x *GetBlacklistListRequest) Reset() {
	*x = GetBlacklistListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistListRequest) ProtoMessage() {}

func (x *GetBlacklistListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistListRequest.ProtoReflect.Descriptor instead.
func (*GetBlacklistListRequest) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{6}
}

func (x *GetBlacklistListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetBlacklistListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BlacklistItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // 黑名单记录ID
	UserId    int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`         // 用户ID
	Reason    string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                        // 拉黑原因
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // 拉黑时间
	UserName  string `protobuf:"bytes,5,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`    // 用户昵称
	Phone     string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`                          // 用户手机号
}

func (x *BlacklistItem) Reset() {
	*x = BlacklistItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistItem) ProtoMessage() {}

func (x *BlacklistItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistItem.ProtoReflect.Descriptor instead.
func (*BlacklistItem) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{7}
}

func (x *BlacklistItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlacklistItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BlacklistItem) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BlacklistItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BlacklistItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *BlacklistItem) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetBlacklistListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*BlacklistItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total    int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page     int32            `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize int32            `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页大小
}

func (x *GetBlacklistListReply) Reset() {
	*x = GetBlacklistListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlacklistListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlacklistListReply) ProtoMessage() {}

func (x *GetBlacklistListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_blacklist_v1_blacklist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlacklistListReply.ProtoReflect.Descriptor instead.
func (*GetBlacklistListReply) Descriptor() ([]byte, []int) {
	return file_api_blacklist_v1_blacklist_proto_rawDescGZIP(), []int{8}
}

func (x *GetBlacklistListReply) GetItems() []*BlacklistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetBlacklistListReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetBlacklistListReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetBlacklistListReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_api_blacklist_v1_blacklist_proto protoreflect.FileDescriptor

var file_api_blacklist_v1_blacklist_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x48, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x1a, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x4e, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x30, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x32, 0xa0, 0x04, 0x0a, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x7b, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x61, 0x64, 0x64, 0x12, 0x8d, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a,
	0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x7f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x42, 0x42, 0x0a, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x1a, 0x61, 0x6e,
	0x6a, 0x75, 0x6b, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_blacklist_v1_blacklist_proto_rawDescOnce sync.Once
	file_api_blacklist_v1_blacklist_proto_rawDescData = file_api_blacklist_v1_blacklist_proto_rawDesc
)

func file_api_blacklist_v1_blacklist_proto_rawDescGZIP() []byte {
	file_api_blacklist_v1_blacklist_proto_rawDescOnce.Do(func() {
		file_api_blacklist_v1_blacklist_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_blacklist_v1_blacklist_proto_rawDescData)
	})
	return file_api_blacklist_v1_blacklist_proto_rawDescData
}

var file_api_blacklist_v1_blacklist_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_blacklist_v1_blacklist_proto_goTypes = []any{
	(*AddToBlacklistRequest)(nil),      // 0: api.blacklist.v1.AddToBlacklistRequest
	(*AddToBlacklistReply)(nil),        // 1: api.blacklist.v1.AddToBlacklistReply
	(*RemoveFromBlacklistRequest)(nil), // 2: api.blacklist.v1.RemoveFromBlacklistRequest
	(*RemoveFromBlacklistReply)(nil),   // 3: api.blacklist.v1.RemoveFromBlacklistReply
	(*CheckBlacklistRequest)(nil),      // 4: api.blacklist.v1.CheckBlacklistRequest
	(*CheckBlacklistReply)(nil),        // 5: api.blacklist.v1.CheckBlacklistReply
	(*GetBlacklistListRequest)(nil),    // 6: api.blacklist.v1.GetBlacklistListRequest
	(*BlacklistItem)(nil),              // 7: api.blacklist.v1.BlacklistItem
	(*GetBlacklistListReply)(nil),      // 8: api.blacklist.v1.GetBlacklistListReply
}
var file_api_blacklist_v1_blacklist_proto_depIdxs = []int32{
	7, // 0: api.blacklist.v1.GetBlacklistListReply.items:type_name -> api.blacklist.v1.BlacklistItem
	0, // 1: api.blacklist.v1.Blacklist.AddToBlacklist:input_type -> api.blacklist.v1.AddToBlacklistRequest
	2, // 2: api.blacklist.v1.Blacklist.RemoveFromBlacklist:input_type -> api.blacklist.v1.RemoveFromBlacklistRequest
	4, // 3: api.blacklist.v1.Blacklist.CheckBlacklist:input_type -> api.blacklist.v1.CheckBlacklistRequest
	6, // 4: api.blacklist.v1.Blacklist.GetBlacklistList:input_type -> api.blacklist.v1.GetBlacklistListRequest
	1, // 5: api.blacklist.v1.Blacklist.AddToBlacklist:output_type -> api.blacklist.v1.AddToBlacklistReply
	3, // 6: api.blacklist.v1.Blacklist.RemoveFromBlacklist:output_type -> api.blacklist.v1.RemoveFromBlacklistReply
	5, // 7: api.blacklist.v1.Blacklist.CheckBlacklist:output_type -> api.blacklist.v1.CheckBlacklistReply
	8, // 8: api.blacklist.v1.Blacklist.GetBlacklistList:output_type -> api.blacklist.v1.GetBlacklistListReply
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_blacklist_v1_blacklist_proto_init() }
func file_api_blacklist_v1_blacklist_proto_init() {
	if File_api_blacklist_v1_blacklist_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_blacklist_v1_blacklist_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddToBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddToBlacklistReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveFromBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveFromBlacklistReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CheckBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CheckBlacklistReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetBlacklistListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BlacklistItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_blacklist_v1_blacklist_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetBlacklistListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_blacklist_v1_blacklist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_blacklist_v1_blacklist_proto_goTypes,
		DependencyIndexes: file_api_blacklist_v1_blacklist_proto_depIdxs,
		MessageInfos:      file_api_blacklist_v1_blacklist_proto_msgTypes,
	}.Build()
	File_api_blacklist_v1_blacklist_proto = out.File
	file_api_blacklist_v1_blacklist_proto_rawDesc = nil
	file_api_blacklist_v1_blacklist_proto_goTypes = nil
	file_api_blacklist_v1_blacklist_proto_depIdxs = nil
}
