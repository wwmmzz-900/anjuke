// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: api/permission/v1/permission.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 权限类型枚举
type PermissionType int32

const (
	PermissionType_UNKNOWN            PermissionType = 0
	PermissionType_READ               PermissionType = 1 // 读取权限
	PermissionType_WRITE              PermissionType = 2 // 写入权限
	PermissionType_DELETE             PermissionType = 3 // 删除权限
	PermissionType_ADMIN              PermissionType = 4 // 管理员权限
	PermissionType_PUBLISH_HOUSE      PermissionType = 5 // 发布房源权限
	PermissionType_MANAGE_USER        PermissionType = 6 // 用户管理权限
	PermissionType_MANAGE_TRANSACTION PermissionType = 7 // 交易管理权限
	PermissionType_CUSTOMER_SERVICE   PermissionType = 8 // 客服权限
)

// Enum value maps for PermissionType.
var (
	PermissionType_name = map[int32]string{
		0: "UNKNOWN",
		1: "READ",
		2: "WRITE",
		3: "DELETE",
		4: "ADMIN",
		5: "PUBLISH_HOUSE",
		6: "MANAGE_USER",
		7: "MANAGE_TRANSACTION",
		8: "CUSTOMER_SERVICE",
	}
	PermissionType_value = map[string]int32{
		"UNKNOWN":            0,
		"READ":               1,
		"WRITE":              2,
		"DELETE":             3,
		"ADMIN":              4,
		"PUBLISH_HOUSE":      5,
		"MANAGE_USER":        6,
		"MANAGE_TRANSACTION": 7,
		"CUSTOMER_SERVICE":   8,
	}
)

func (x PermissionType) Enum() *PermissionType {
	p := new(PermissionType)
	*p = x
	return p
}

func (x PermissionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_permission_v1_permission_proto_enumTypes[0].Descriptor()
}

func (PermissionType) Type() protoreflect.EnumType {
	return &file_api_permission_v1_permission_proto_enumTypes[0]
}

func (x PermissionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionType.Descriptor instead.
func (PermissionType) EnumDescriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{0}
}

// 用户角色枚举
type UserRole int32

const (
	UserRole_ROLE_GUEST       UserRole = 0 // 游客
	UserRole_ROLE_NORMAL_USER UserRole = 1 // 普通用户
	UserRole_ROLE_VIP_USER    UserRole = 2 // VIP用户
	UserRole_ROLE_LANDLORD    UserRole = 3 // 房东
	UserRole_ROLE_AGENT       UserRole = 4 // 经纪人
	UserRole_ROLE_ADMIN       UserRole = 5 // 管理员
	UserRole_ROLE_SUPER_ADMIN UserRole = 6 // 超级管理员
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "ROLE_GUEST",
		1: "ROLE_NORMAL_USER",
		2: "ROLE_VIP_USER",
		3: "ROLE_LANDLORD",
		4: "ROLE_AGENT",
		5: "ROLE_ADMIN",
		6: "ROLE_SUPER_ADMIN",
	}
	UserRole_value = map[string]int32{
		"ROLE_GUEST":       0,
		"ROLE_NORMAL_USER": 1,
		"ROLE_VIP_USER":    2,
		"ROLE_LANDLORD":    3,
		"ROLE_AGENT":       4,
		"ROLE_ADMIN":       5,
		"ROLE_SUPER_ADMIN": 6,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_api_permission_v1_permission_proto_enumTypes[1].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_api_permission_v1_permission_proto_enumTypes[1]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{1}
}

type UpdateUserPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                          // 用户ID
	Permissions []PermissionType `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=api.permission.v1.PermissionType" json:"permissions,omitempty"` // 权限列表
	Role        UserRole         `protobuf:"varint,3,opt,name=role,proto3,enum=api.permission.v1.UserRole" json:"role,omitempty"`                            // 用户角色
	Reason      string           `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                                                         // 修改原因
	OperatorId  int64            `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`                              // 操作者ID
}

func (x *UpdateUserPermissionRequest) Reset() {
	*x = UpdateUserPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPermissionRequest) ProtoMessage() {}

func (x *UpdateUserPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPermissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserPermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateUserPermissionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserPermissionRequest) GetPermissions() []PermissionType {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UpdateUserPermissionRequest) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_ROLE_GUEST
}

func (x *UpdateUserPermissionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *UpdateUserPermissionRequest) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

type UpdateUserPermissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PermissionId int64  `protobuf:"varint,3,opt,name=permission_id,json=permissionId,proto3" json:"permission_id,omitempty"` // 权限记录ID
}

func (x *UpdateUserPermissionReply) Reset() {
	*x = UpdateUserPermissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPermissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPermissionReply) ProtoMessage() {}

func (x *UpdateUserPermissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPermissionReply.ProtoReflect.Descriptor instead.
func (*UpdateUserPermissionReply) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateUserPermissionReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateUserPermissionReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateUserPermissionReply) GetPermissionId() int64 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

type GetUserPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *GetUserPermissionRequest) Reset() {
	*x = GetUserPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionRequest) ProtoMessage() {}

func (x *GetUserPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetUserPermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserPermissionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserPermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                          // 用户ID
	Permissions  []PermissionType `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=api.permission.v1.PermissionType" json:"permissions,omitempty"` // 权限列表
	Role         UserRole         `protobuf:"varint,3,opt,name=role,proto3,enum=api.permission.v1.UserRole" json:"role,omitempty"`                            // 用户角色
	CreatedAt    string           `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                  // 创建时间
	UpdatedAt    string           `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                  // 更新时间
	OperatorId   int64            `protobuf:"varint,6,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`                              // 最后操作者ID
	OperatorName string           `protobuf:"bytes,7,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`                         // 最后操作者姓名
}

func (x *UserPermissionInfo) Reset() {
	*x = UserPermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermissionInfo) ProtoMessage() {}

func (x *UserPermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermissionInfo.ProtoReflect.Descriptor instead.
func (*UserPermissionInfo) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{3}
}

func (x *UserPermissionInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserPermissionInfo) GetPermissions() []PermissionType {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UserPermissionInfo) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_ROLE_GUEST
}

func (x *UserPermissionInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserPermissionInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UserPermissionInfo) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UserPermissionInfo) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

type GetUserPermissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionInfo *UserPermissionInfo `protobuf:"bytes,1,opt,name=permission_info,json=permissionInfo,proto3" json:"permission_info,omitempty"`
}

func (x *GetUserPermissionReply) Reset() {
	*x = GetUserPermissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPermissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionReply) ProtoMessage() {}

func (x *GetUserPermissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionReply.ProtoReflect.Descriptor instead.
func (*GetUserPermissionReply) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserPermissionReply) GetPermissionInfo() *UserPermissionInfo {
	if x != nil {
		return x.PermissionInfo
	}
	return nil
}

type BatchUpdateUserPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates []*UpdateUserPermissionRequest `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
}

func (x *BatchUpdateUserPermissionRequest) Reset() {
	*x = BatchUpdateUserPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateUserPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateUserPermissionRequest) ProtoMessage() {}

func (x *BatchUpdateUserPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateUserPermissionRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateUserPermissionRequest) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{5}
}

func (x *BatchUpdateUserPermissionRequest) GetUpdates() []*UpdateUserPermissionRequest {
	if x != nil {
		return x.Updates
	}
	return nil
}

type BatchUpdateUserPermissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SuccessCount  int32    `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`   // 成功数量
	FailedCount   int32    `protobuf:"varint,4,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`      // 失败数量
	ErrorMessages []string `protobuf:"bytes,5,rep,name=error_messages,json=errorMessages,proto3" json:"error_messages,omitempty"` // 错误信息列表
}

func (x *BatchUpdateUserPermissionReply) Reset() {
	*x = BatchUpdateUserPermissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateUserPermissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateUserPermissionReply) ProtoMessage() {}

func (x *BatchUpdateUserPermissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateUserPermissionReply.ProtoReflect.Descriptor instead.
func (*BatchUpdateUserPermissionReply) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{6}
}

func (x *BatchUpdateUserPermissionReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchUpdateUserPermissionReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BatchUpdateUserPermissionReply) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *BatchUpdateUserPermissionReply) GetFailedCount() int32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *BatchUpdateUserPermissionReply) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

type GetPermissionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                                               // 页码
	PageSize   int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                       // 每页大小
	RoleFilter UserRole `protobuf:"varint,3,opt,name=role_filter,json=roleFilter,proto3,enum=api.permission.v1.UserRole" json:"role_filter,omitempty"` // 角色筛选
}

func (x *GetPermissionListRequest) Reset() {
	*x = GetPermissionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionListRequest) ProtoMessage() {}

func (x *GetPermissionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionListRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionListRequest) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{7}
}

func (x *GetPermissionListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPermissionListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetPermissionListRequest) GetRoleFilter() UserRole {
	if x != nil {
		return x.RoleFilter
	}
	return UserRole_ROLE_GUEST
}

type PermissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                // 权限记录ID
	UserId       int64            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                          // 用户ID
	UserName     string           `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                                     // 用户姓名
	Phone        string           `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`                                                           // 用户手机号
	Permissions  []PermissionType `protobuf:"varint,5,rep,packed,name=permissions,proto3,enum=api.permission.v1.PermissionType" json:"permissions,omitempty"` // 权限列表
	Role         UserRole         `protobuf:"varint,6,opt,name=role,proto3,enum=api.permission.v1.UserRole" json:"role,omitempty"`                            // 用户角色
	CreatedAt    string           `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                  // 创建时间
	UpdatedAt    string           `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                  // 更新时间
	OperatorId   int64            `protobuf:"varint,9,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`                              // 操作者ID
	OperatorName string           `protobuf:"bytes,10,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`                        // 操作者姓名
}

func (x *PermissionItem) Reset() {
	*x = PermissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionItem) ProtoMessage() {}

func (x *PermissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionItem.ProtoReflect.Descriptor instead.
func (*PermissionItem) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{8}
}

func (x *PermissionItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PermissionItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *PermissionItem) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PermissionItem) GetPermissions() []PermissionType {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PermissionItem) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_ROLE_GUEST
}

func (x *PermissionItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PermissionItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PermissionItem) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *PermissionItem) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

type GetPermissionListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*PermissionItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total    int32             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page     int32             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize int32             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页大小
}

func (x *GetPermissionListReply) Reset() {
	*x = GetPermissionListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermissionListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionListReply) ProtoMessage() {}

func (x *GetPermissionListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionListReply.ProtoReflect.Descriptor instead.
func (*GetPermissionListReply) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{9}
}

func (x *GetPermissionListReply) GetItems() []*PermissionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetPermissionListReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetPermissionListReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetPermissionListReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRolePermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId UserRole `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3,enum=api.permission.v1.UserRole" json:"role_id,omitempty"` // 角色ID
}

func (x *GetRolePermissionsRequest) Reset() {
	*x = GetRolePermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolePermissionsRequest) ProtoMessage() {}

func (x *GetRolePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolePermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetRolePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{10}
}

func (x *GetRolePermissionsRequest) GetRoleId() UserRole {
	if x != nil {
		return x.RoleId
	}
	return UserRole_ROLE_GUEST
}

type GetRolePermissionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role        UserRole         `protobuf:"varint,1,opt,name=role,proto3,enum=api.permission.v1.UserRole" json:"role,omitempty"`                            // 角色
	Permissions []PermissionType `protobuf:"varint,2,rep,packed,name=permissions,proto3,enum=api.permission.v1.PermissionType" json:"permissions,omitempty"` // 该角色默认权限
	Description string           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                               // 角色描述
}

func (x *GetRolePermissionsReply) Reset() {
	*x = GetRolePermissionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_v1_permission_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolePermissionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolePermissionsReply) ProtoMessage() {}

func (x *GetRolePermissionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_v1_permission_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolePermissionsReply.ProtoReflect.Descriptor instead.
func (*GetRolePermissionsReply) Descriptor() ([]byte, []int) {
	return file_api_permission_v1_permission_proto_rawDescGZIP(), []int{11}
}

func (x *GetRolePermissionsReply) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_ROLE_GUEST
}

func (x *GetRolePermissionsReply) GetPermissions() []PermissionType {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *GetRolePermissionsReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_api_permission_v1_permission_proto protoreflect.FileDescriptor

var file_api_permission_v1_permission_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x74, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x68, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6c, 0x0a, 0x20,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x1e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3c,
	0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xe6, 0x02, 0x0a,
	0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x51, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x43, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x9b, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49,
	0x4e, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x48,
	0x4f, 0x55, 0x53, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x4e, 0x41, 0x47,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x10, 0x08, 0x2a, 0x8c, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x47, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41,
	0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x56, 0x49, 0x50, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x4c, 0x41, 0x4e, 0x44, 0x4c, 0x4f, 0x52, 0x44, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x06, 0x32, 0xfd, 0x05, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x1a, 0x1a, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xa1, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x85, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x92, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x42, 0x45, 0x0a, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x1b,
	0x61, 0x6e, 0x6a, 0x75, 0x6b, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_permission_v1_permission_proto_rawDescOnce sync.Once
	file_api_permission_v1_permission_proto_rawDescData = file_api_permission_v1_permission_proto_rawDesc
)

func file_api_permission_v1_permission_proto_rawDescGZIP() []byte {
	file_api_permission_v1_permission_proto_rawDescOnce.Do(func() {
		file_api_permission_v1_permission_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_permission_v1_permission_proto_rawDescData)
	})
	return file_api_permission_v1_permission_proto_rawDescData
}

var file_api_permission_v1_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_permission_v1_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_permission_v1_permission_proto_goTypes = []any{
	(PermissionType)(0),                      // 0: api.permission.v1.PermissionType
	(UserRole)(0),                            // 1: api.permission.v1.UserRole
	(*UpdateUserPermissionRequest)(nil),      // 2: api.permission.v1.UpdateUserPermissionRequest
	(*UpdateUserPermissionReply)(nil),        // 3: api.permission.v1.UpdateUserPermissionReply
	(*GetUserPermissionRequest)(nil),         // 4: api.permission.v1.GetUserPermissionRequest
	(*UserPermissionInfo)(nil),               // 5: api.permission.v1.UserPermissionInfo
	(*GetUserPermissionReply)(nil),           // 6: api.permission.v1.GetUserPermissionReply
	(*BatchUpdateUserPermissionRequest)(nil), // 7: api.permission.v1.BatchUpdateUserPermissionRequest
	(*BatchUpdateUserPermissionReply)(nil),   // 8: api.permission.v1.BatchUpdateUserPermissionReply
	(*GetPermissionListRequest)(nil),         // 9: api.permission.v1.GetPermissionListRequest
	(*PermissionItem)(nil),                   // 10: api.permission.v1.PermissionItem
	(*GetPermissionListReply)(nil),           // 11: api.permission.v1.GetPermissionListReply
	(*GetRolePermissionsRequest)(nil),        // 12: api.permission.v1.GetRolePermissionsRequest
	(*GetRolePermissionsReply)(nil),          // 13: api.permission.v1.GetRolePermissionsReply
}
var file_api_permission_v1_permission_proto_depIdxs = []int32{
	0,  // 0: api.permission.v1.UpdateUserPermissionRequest.permissions:type_name -> api.permission.v1.PermissionType
	1,  // 1: api.permission.v1.UpdateUserPermissionRequest.role:type_name -> api.permission.v1.UserRole
	0,  // 2: api.permission.v1.UserPermissionInfo.permissions:type_name -> api.permission.v1.PermissionType
	1,  // 3: api.permission.v1.UserPermissionInfo.role:type_name -> api.permission.v1.UserRole
	5,  // 4: api.permission.v1.GetUserPermissionReply.permission_info:type_name -> api.permission.v1.UserPermissionInfo
	2,  // 5: api.permission.v1.BatchUpdateUserPermissionRequest.updates:type_name -> api.permission.v1.UpdateUserPermissionRequest
	1,  // 6: api.permission.v1.GetPermissionListRequest.role_filter:type_name -> api.permission.v1.UserRole
	0,  // 7: api.permission.v1.PermissionItem.permissions:type_name -> api.permission.v1.PermissionType
	1,  // 8: api.permission.v1.PermissionItem.role:type_name -> api.permission.v1.UserRole
	10, // 9: api.permission.v1.GetPermissionListReply.items:type_name -> api.permission.v1.PermissionItem
	1,  // 10: api.permission.v1.GetRolePermissionsRequest.role_id:type_name -> api.permission.v1.UserRole
	1,  // 11: api.permission.v1.GetRolePermissionsReply.role:type_name -> api.permission.v1.UserRole
	0,  // 12: api.permission.v1.GetRolePermissionsReply.permissions:type_name -> api.permission.v1.PermissionType
	2,  // 13: api.permission.v1.Permission.UpdateUserPermission:input_type -> api.permission.v1.UpdateUserPermissionRequest
	4,  // 14: api.permission.v1.Permission.GetUserPermission:input_type -> api.permission.v1.GetUserPermissionRequest
	7,  // 15: api.permission.v1.Permission.BatchUpdateUserPermission:input_type -> api.permission.v1.BatchUpdateUserPermissionRequest
	9,  // 16: api.permission.v1.Permission.GetPermissionList:input_type -> api.permission.v1.GetPermissionListRequest
	12, // 17: api.permission.v1.Permission.GetRolePermissions:input_type -> api.permission.v1.GetRolePermissionsRequest
	3,  // 18: api.permission.v1.Permission.UpdateUserPermission:output_type -> api.permission.v1.UpdateUserPermissionReply
	6,  // 19: api.permission.v1.Permission.GetUserPermission:output_type -> api.permission.v1.GetUserPermissionReply
	8,  // 20: api.permission.v1.Permission.BatchUpdateUserPermission:output_type -> api.permission.v1.BatchUpdateUserPermissionReply
	11, // 21: api.permission.v1.Permission.GetPermissionList:output_type -> api.permission.v1.GetPermissionListReply
	13, // 22: api.permission.v1.Permission.GetRolePermissions:output_type -> api.permission.v1.GetRolePermissionsReply
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_permission_v1_permission_proto_init() }
func file_api_permission_v1_permission_proto_init() {
	if File_api_permission_v1_permission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_permission_v1_permission_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserPermissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UserPermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserPermissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BatchUpdateUserPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*BatchUpdateUserPermissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetPermissionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PermissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetPermissionListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetRolePermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_v1_permission_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetRolePermissionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_permission_v1_permission_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_permission_v1_permission_proto_goTypes,
		DependencyIndexes: file_api_permission_v1_permission_proto_depIdxs,
		EnumInfos:         file_api_permission_v1_permission_proto_enumTypes,
		MessageInfos:      file_api_permission_v1_permission_proto_msgTypes,
	}.Build()
	File_api_permission_v1_permission_proto = out.File
	file_api_permission_v1_permission_proto_rawDesc = nil
	file_api_permission_v1_permission_proto_goTypes = nil
	file_api_permission_v1_permission_proto_depIdxs = nil
}
