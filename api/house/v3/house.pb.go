// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: house.proto

package v3

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WebSocket消息类型枚举
type MessageType int32

const (
	MessageType_UNKNOWN               MessageType = 0
	MessageType_RESERVATION_CREATED   MessageType = 1 // 预约创建
	MessageType_RESERVATION_CONFIRMED MessageType = 2 // 预约确认
	MessageType_RESERVATION_CANCELLED MessageType = 3 // 预约取消
	MessageType_RESERVATION_REMINDER  MessageType = 4 // 预约提醒
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "UNKNOWN",
		1: "RESERVATION_CREATED",
		2: "RESERVATION_CONFIRMED",
		3: "RESERVATION_CANCELLED",
		4: "RESERVATION_REMINDER",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN":               0,
		"RESERVATION_CREATED":   1,
		"RESERVATION_CONFIRMED": 2,
		"RESERVATION_CANCELLED": 3,
		"RESERVATION_REMINDER":  4,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_house_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_house_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{0}
}

// 聊天消息类型
type ChatMessageType int32

const (
	ChatMessageType_CHAT_TEXT     ChatMessageType = 0 // 文本消息
	ChatMessageType_CHAT_IMAGE    ChatMessageType = 1 // 图片消息
	ChatMessageType_CHAT_VOICE    ChatMessageType = 2 // 语音消息
	ChatMessageType_CHAT_LOCATION ChatMessageType = 3 // 位置消息
	ChatMessageType_CHAT_SYSTEM   ChatMessageType = 4 // 系统消息
)

// Enum value maps for ChatMessageType.
var (
	ChatMessageType_name = map[int32]string{
		0: "CHAT_TEXT",
		1: "CHAT_IMAGE",
		2: "CHAT_VOICE",
		3: "CHAT_LOCATION",
		4: "CHAT_SYSTEM",
	}
	ChatMessageType_value = map[string]int32{
		"CHAT_TEXT":     0,
		"CHAT_IMAGE":    1,
		"CHAT_VOICE":    2,
		"CHAT_LOCATION": 3,
		"CHAT_SYSTEM":   4,
	}
)

func (x ChatMessageType) Enum() *ChatMessageType {
	p := new(ChatMessageType)
	*p = x
	return p
}

func (x ChatMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_house_proto_enumTypes[1].Descriptor()
}

func (ChatMessageType) Type() protoreflect.EnumType {
	return &file_house_proto_enumTypes[1]
}

func (x ChatMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMessageType.Descriptor instead.
func (ChatMessageType) EnumDescriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{1}
}

// 普通推荐请求
type HouseRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
}

func (x *HouseRecommendRequest) Reset() {
	*x = HouseRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseRecommendRequest) ProtoMessage() {}

func (x *HouseRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseRecommendRequest.ProtoReflect.Descriptor instead.
func (*HouseRecommendRequest) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{0}
}

func (x *HouseRecommendRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HouseRecommendRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 个性化推荐请求
type PersonalRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户ID
	Page     int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
}

func (x *PersonalRecommendRequest) Reset() {
	*x = PersonalRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalRecommendRequest) ProtoMessage() {}

func (x *PersonalRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalRecommendRequest.ProtoReflect.Descriptor instead.
func (*PersonalRecommendRequest) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{1}
}

func (x *PersonalRecommendRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PersonalRecommendRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PersonalRecommendRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 标准响应结构
type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 状态码，0表示成功
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 消息
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{2}
}

func (x *BaseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 推荐列表数据
type HouseRecommendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 总数
	List  []*HouseRecommendItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 房源列表
}

func (x *HouseRecommendData) Reset() {
	*x = HouseRecommendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseRecommendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseRecommendData) ProtoMessage() {}

func (x *HouseRecommendData) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseRecommendData.ProtoReflect.Descriptor instead.
func (*HouseRecommendData) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{3}
}

func (x *HouseRecommendData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *HouseRecommendData) GetList() []*HouseRecommendItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 推荐列表响应
type HouseRecommendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 状态码，0表示成功
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 消息
	Data *HouseRecommendData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 数据
}

func (x *HouseRecommendReply) Reset() {
	*x = HouseRecommendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseRecommendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseRecommendReply) ProtoMessage() {}

func (x *HouseRecommendReply) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseRecommendReply.ProtoReflect.Descriptor instead.
func (*HouseRecommendReply) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{4}
}

func (x *HouseRecommendReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HouseRecommendReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HouseRecommendReply) GetData() *HouseRecommendData {
	if x != nil {
		return x.Data
	}
	return nil
}

type HouseRecommendItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HouseId     int64   `protobuf:"varint,1,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Area        float64 `protobuf:"fixed64,5,opt,name=area,proto3" json:"area,omitempty"`
	Layout      string  `protobuf:"bytes,6,opt,name=layout,proto3" json:"layout,omitempty"`
	ImageUrl    string  `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *HouseRecommendItem) Reset() {
	*x = HouseRecommendItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HouseRecommendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HouseRecommendItem) ProtoMessage() {}

func (x *HouseRecommendItem) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HouseRecommendItem.ProtoReflect.Descriptor instead.
func (*HouseRecommendItem) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{5}
}

func (x *HouseRecommendItem) GetHouseId() int64 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *HouseRecommendItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HouseRecommendItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HouseRecommendItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *HouseRecommendItem) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *HouseRecommendItem) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *HouseRecommendItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// 预约看房请求
type ReserveHouseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LandlordId  int64  `protobuf:"varint,1,opt,name=landlord_id,json=landlordId,proto3" json:"landlord_id,omitempty"`   // 房东ID
	UserId      int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 预约人ID
	UserName    string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          // 预约人姓名
	HouseId     int64  `protobuf:"varint,4,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`            // 房源ID
	HouseTitle  string `protobuf:"bytes,5,opt,name=house_title,json=houseTitle,proto3" json:"house_title,omitempty"`    // 房源标题
	ReserveTime string `protobuf:"bytes,6,opt,name=reserve_time,json=reserveTime,proto3" json:"reserve_time,omitempty"` // 预约时间
}

func (x *ReserveHouseRequest) Reset() {
	*x = ReserveHouseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveHouseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveHouseRequest) ProtoMessage() {}

func (x *ReserveHouseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveHouseRequest.ProtoReflect.Descriptor instead.
func (*ReserveHouseRequest) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{6}
}

func (x *ReserveHouseRequest) GetLandlordId() int64 {
	if x != nil {
		return x.LandlordId
	}
	return 0
}

func (x *ReserveHouseRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReserveHouseRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ReserveHouseRequest) GetHouseId() int64 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *ReserveHouseRequest) GetHouseTitle() string {
	if x != nil {
		return x.HouseTitle
	}
	return ""
}

func (x *ReserveHouseRequest) GetReserveTime() string {
	if x != nil {
		return x.ReserveTime
	}
	return ""
}

// 预约数据
type ReserveHouseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                  // 是否成功
	ReservationId int64 `protobuf:"varint,2,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"` // 预约ID
}

func (x *ReserveHouseData) Reset() {
	*x = ReserveHouseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveHouseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveHouseData) ProtoMessage() {}

func (x *ReserveHouseData) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveHouseData.ProtoReflect.Descriptor instead.
func (*ReserveHouseData) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{7}
}

func (x *ReserveHouseData) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReserveHouseData) GetReservationId() int64 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

// 预约看房响应
type ReserveHouseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 状态码，0表示成功
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 消息
	Data *ReserveHouseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 数据
}

func (x *ReserveHouseReply) Reset() {
	*x = ReserveHouseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveHouseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveHouseReply) ProtoMessage() {}

func (x *ReserveHouseReply) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveHouseReply.ProtoReflect.Descriptor instead.
func (*ReserveHouseReply) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{8}
}

func (x *ReserveHouseReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReserveHouseReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ReserveHouseReply) GetData() *ReserveHouseData {
	if x != nil {
		return x.Data
	}
	return nil
}

// WebSocket消息结构
type WebSocketMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          MessageType        `protobuf:"varint,1,opt,name=type,proto3,enum=api.house.v3.MessageType" json:"type,omitempty"`          // 消息类型
	UserId        int64              `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // 接收用户ID
	ReservationId int64              `protobuf:"varint,3,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"` // 预约ID
	Title         string             `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                       // 消息标题
	Content       string             `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                                   // 消息内容
	Timestamp     int64              `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                              // 时间戳
	Detail        *ReservationDetail `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`                                     // 预约详情
}

func (x *WebSocketMessage) Reset() {
	*x = WebSocketMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebSocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketMessage) ProtoMessage() {}

func (x *WebSocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketMessage.ProtoReflect.Descriptor instead.
func (*WebSocketMessage) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{9}
}

func (x *WebSocketMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UNKNOWN
}

func (x *WebSocketMessage) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WebSocketMessage) GetReservationId() int64 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *WebSocketMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WebSocketMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WebSocketMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *WebSocketMessage) GetDetail() *ReservationDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 预约详情
type ReservationDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId int64  `protobuf:"varint,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"` // 预约ID
	HouseId       int64  `protobuf:"varint,2,opt,name=house_id,json=houseId,proto3" json:"house_id,omitempty"`                   // 房源ID
	HouseTitle    string `protobuf:"bytes,3,opt,name=house_title,json=houseTitle,proto3" json:"house_title,omitempty"`           // 房源标题
	LandlordId    int64  `protobuf:"varint,4,opt,name=landlord_id,json=landlordId,proto3" json:"landlord_id,omitempty"`          // 房东ID
	LandlordName  string `protobuf:"bytes,5,opt,name=landlord_name,json=landlordName,proto3" json:"landlord_name,omitempty"`     // 房东姓名
	UserId        int64  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // 预约人ID
	UserName      string `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                 // 预约人姓名
	ReserveTime   string `protobuf:"bytes,8,opt,name=reserve_time,json=reserveTime,proto3" json:"reserve_time,omitempty"`        // 预约时间
	Status        string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`                                     // 预约状态
	CreatedAt     int64  `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`            // 创建时间
	ChatId        string `protobuf:"bytes,11,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                      // 聊天ID，用于在线聊天
}

func (x *ReservationDetail) Reset() {
	*x = ReservationDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservationDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservationDetail) ProtoMessage() {}

func (x *ReservationDetail) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservationDetail.ProtoReflect.Descriptor instead.
func (*ReservationDetail) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{10}
}

func (x *ReservationDetail) GetReservationId() int64 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *ReservationDetail) GetHouseId() int64 {
	if x != nil {
		return x.HouseId
	}
	return 0
}

func (x *ReservationDetail) GetHouseTitle() string {
	if x != nil {
		return x.HouseTitle
	}
	return ""
}

func (x *ReservationDetail) GetLandlordId() int64 {
	if x != nil {
		return x.LandlordId
	}
	return 0
}

func (x *ReservationDetail) GetLandlordName() string {
	if x != nil {
		return x.LandlordName
	}
	return ""
}

func (x *ReservationDetail) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReservationDetail) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ReservationDetail) GetReserveTime() string {
	if x != nil {
		return x.ReserveTime
	}
	return ""
}

func (x *ReservationDetail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReservationDetail) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ReservationDetail) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

// 聊天消息
type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId       string          `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`                   // 聊天ID
	SenderId     int64           `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`            // 发送者ID
	SenderName   string          `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`       // 发送者名称
	ReceiverId   int64           `protobuf:"varint,4,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`      // 接收者ID
	ReceiverName string          `protobuf:"bytes,5,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"` // 接收者名称
	Type         ChatMessageType `protobuf:"varint,6,opt,name=type,proto3,enum=api.house.v3.ChatMessageType" json:"type,omitempty"`  // 消息类型
	Content      string          `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`                               // 消息内容
	Timestamp    int64           `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                          // 时间戳
	Read         bool            `protobuf:"varint,9,opt,name=read,proto3" json:"read,omitempty"`                                    // 是否已读
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{11}
}

func (x *ChatMessage) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *ChatMessage) GetSenderId() int64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *ChatMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ChatMessage) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *ChatMessage) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *ChatMessage) GetType() ChatMessageType {
	if x != nil {
		return x.Type
	}
	return ChatMessageType_CHAT_TEXT
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChatMessage) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

// 发起聊天请求
type StartChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationId  int64  `protobuf:"varint,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`   // 预约ID
	UserId         int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                        // 用户ID
	LandlordId     int64  `protobuf:"varint,3,opt,name=landlord_id,json=landlordId,proto3" json:"landlord_id,omitempty"`            // 房东ID
	InitialMessage string `protobuf:"bytes,4,opt,name=initial_message,json=initialMessage,proto3" json:"initial_message,omitempty"` // 初始消息
}

func (x *StartChatRequest) Reset() {
	*x = StartChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChatRequest) ProtoMessage() {}

func (x *StartChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChatRequest.ProtoReflect.Descriptor instead.
func (*StartChatRequest) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{12}
}

func (x *StartChatRequest) GetReservationId() int64 {
	if x != nil {
		return x.ReservationId
	}
	return 0
}

func (x *StartChatRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StartChatRequest) GetLandlordId() int64 {
	if x != nil {
		return x.LandlordId
	}
	return 0
}

func (x *StartChatRequest) GetInitialMessage() string {
	if x != nil {
		return x.InitialMessage
	}
	return ""
}

// 发起聊天响应
type StartChatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 状态码
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`    // 消息
	Data *StartChatData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`  // 数据
}

func (x *StartChatReply) Reset() {
	*x = StartChatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChatReply) ProtoMessage() {}

func (x *StartChatReply) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChatReply.ProtoReflect.Descriptor instead.
func (*StartChatReply) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{13}
}

func (x *StartChatReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StartChatReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StartChatReply) GetData() *StartChatData {
	if x != nil {
		return x.Data
	}
	return nil
}

// 发起聊天数据
type StartChatData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId  string `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"` // 聊天ID
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`            // 是否成功
}

func (x *StartChatData) Reset() {
	*x = StartChatData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_house_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartChatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartChatData) ProtoMessage() {}

func (x *StartChatData) ProtoReflect() protoreflect.Message {
	mi := &file_house_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartChatData.ProtoReflect.Descriptor instead.
func (*StartChatData) Descriptor() ([]byte, []int) {
	return file_house_proto_rawDescGZIP(), []int{14}
}

func (x *StartChatData) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *StartChatData) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_house_proto protoreflect.FileDescriptor

var file_house_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61,
	0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x15, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x64, 0x0a, 0x18, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x60, 0x0a, 0x12, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x71, 0x0a, 0x13, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x48, 0x6f, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xc6, 0x01, 0x0a, 0x12, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xcb, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x64,
	0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x6d, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x88, 0x02, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76,
	0x33, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x37, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xe5, 0x02, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e,
	0x64, 0x6c, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74,
	0x49, 0x64, 0x22, 0xa9, 0x02, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x22, 0x9c,
	0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e,
	0x76, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x83, 0x01, 0x0a, 0x0b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x45, 0x52,
	0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x52,
	0x45, 0x53, 0x45, 0x52, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x49, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x04,
	0x2a, 0x64, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x54, 0x45, 0x58, 0x54,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x10, 0x04, 0x32, 0xda, 0x03, 0x0a, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x12, 0x71, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33,
	0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x12, 0x10, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x12, 0x85, 0x01, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x76, 0x33, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x12, 0x19, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x6d, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x67, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a,
	0x22, 0x11, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x42, 0x36, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2e, 0x76, 0x33, 0x42, 0x0c, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56,
	0x33, 0x50, 0x01, 0x5a, 0x16, 0x61, 0x6e, 0x6a, 0x75, 0x6b, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x76, 0x33, 0x3b, 0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_house_proto_rawDescOnce sync.Once
	file_house_proto_rawDescData = file_house_proto_rawDesc
)

func file_house_proto_rawDescGZIP() []byte {
	file_house_proto_rawDescOnce.Do(func() {
		file_house_proto_rawDescData = protoimpl.X.CompressGZIP(file_house_proto_rawDescData)
	})
	return file_house_proto_rawDescData
}

var file_house_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_house_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_house_proto_goTypes = []any{
	(MessageType)(0),                 // 0: api.house.v3.MessageType
	(ChatMessageType)(0),             // 1: api.house.v3.ChatMessageType
	(*HouseRecommendRequest)(nil),    // 2: api.house.v3.HouseRecommendRequest
	(*PersonalRecommendRequest)(nil), // 3: api.house.v3.PersonalRecommendRequest
	(*BaseResponse)(nil),             // 4: api.house.v3.BaseResponse
	(*HouseRecommendData)(nil),       // 5: api.house.v3.HouseRecommendData
	(*HouseRecommendReply)(nil),      // 6: api.house.v3.HouseRecommendReply
	(*HouseRecommendItem)(nil),       // 7: api.house.v3.HouseRecommendItem
	(*ReserveHouseRequest)(nil),      // 8: api.house.v3.ReserveHouseRequest
	(*ReserveHouseData)(nil),         // 9: api.house.v3.ReserveHouseData
	(*ReserveHouseReply)(nil),        // 10: api.house.v3.ReserveHouseReply
	(*WebSocketMessage)(nil),         // 11: api.house.v3.WebSocketMessage
	(*ReservationDetail)(nil),        // 12: api.house.v3.ReservationDetail
	(*ChatMessage)(nil),              // 13: api.house.v3.ChatMessage
	(*StartChatRequest)(nil),         // 14: api.house.v3.StartChatRequest
	(*StartChatReply)(nil),           // 15: api.house.v3.StartChatReply
	(*StartChatData)(nil),            // 16: api.house.v3.StartChatData
}
var file_house_proto_depIdxs = []int32{
	7,  // 0: api.house.v3.HouseRecommendData.list:type_name -> api.house.v3.HouseRecommendItem
	5,  // 1: api.house.v3.HouseRecommendReply.data:type_name -> api.house.v3.HouseRecommendData
	9,  // 2: api.house.v3.ReserveHouseReply.data:type_name -> api.house.v3.ReserveHouseData
	0,  // 3: api.house.v3.WebSocketMessage.type:type_name -> api.house.v3.MessageType
	12, // 4: api.house.v3.WebSocketMessage.detail:type_name -> api.house.v3.ReservationDetail
	1,  // 5: api.house.v3.ChatMessage.type:type_name -> api.house.v3.ChatMessageType
	16, // 6: api.house.v3.StartChatReply.data:type_name -> api.house.v3.StartChatData
	2,  // 7: api.house.v3.House.RecommendList:input_type -> api.house.v3.HouseRecommendRequest
	3,  // 8: api.house.v3.House.PersonalRecommendList:input_type -> api.house.v3.PersonalRecommendRequest
	8,  // 9: api.house.v3.House.ReserveHouse:input_type -> api.house.v3.ReserveHouseRequest
	14, // 10: api.house.v3.House.StartChat:input_type -> api.house.v3.StartChatRequest
	6,  // 11: api.house.v3.House.RecommendList:output_type -> api.house.v3.HouseRecommendReply
	6,  // 12: api.house.v3.House.PersonalRecommendList:output_type -> api.house.v3.HouseRecommendReply
	10, // 13: api.house.v3.House.ReserveHouse:output_type -> api.house.v3.ReserveHouseReply
	15, // 14: api.house.v3.House.StartChat:output_type -> api.house.v3.StartChatReply
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_house_proto_init() }
func file_house_proto_init() {
	if File_house_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_house_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HouseRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PersonalRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HouseRecommendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HouseRecommendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*HouseRecommendItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReserveHouseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ReserveHouseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReserveHouseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*WebSocketMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ReservationDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*StartChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StartChatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_house_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*StartChatData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_house_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_house_proto_goTypes,
		DependencyIndexes: file_house_proto_depIdxs,
		EnumInfos:         file_house_proto_enumTypes,
		MessageInfos:      file_house_proto_msgTypes,
	}.Build()
	File_house_proto = out.File
	file_house_proto_rawDesc = nil
	file_house_proto_goTypes = nil
	file_house_proto_depIdxs = nil
}
