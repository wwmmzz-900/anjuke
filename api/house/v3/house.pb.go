// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.31.1
// source: api/house/v3/house.proto

package v3

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateHouseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateHouseRequest) Reset() {
	*x = CreateHouseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHouseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHouseRequest) ProtoMessage() {}

func (x *CreateHouseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHouseRequest.ProtoReflect.Descriptor instead.
func (*CreateHouseRequest) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{0}
}

type CreateHouseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateHouseReply) Reset() {
	*x = CreateHouseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHouseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHouseReply) ProtoMessage() {}

func (x *CreateHouseReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHouseReply.ProtoReflect.Descriptor instead.
func (*CreateHouseReply) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{1}
}

// 点赞房源请求
type LikePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId int64 `protobuf:"varint,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"` // 房源ID
	UserId     int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户ID
}

func (x *LikePropertyRequest) Reset() {
	*x = LikePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikePropertyRequest) ProtoMessage() {}

func (x *LikePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikePropertyRequest.ProtoReflect.Descriptor instead.
func (*LikePropertyRequest) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{2}
}

func (x *LikePropertyRequest) GetPropertyId() int64 {
	if x != nil {
		return x.PropertyId
	}
	return 0
}

func (x *LikePropertyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 点赞房源响应
type LikePropertyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                      // 是否成功
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                       // 提示信息
	LikeCount int64  `protobuf:"varint,3,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"` // 当前点赞数
}

func (x *LikePropertyReply) Reset() {
	*x = LikePropertyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikePropertyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikePropertyReply) ProtoMessage() {}

func (x *LikePropertyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikePropertyReply.ProtoReflect.Descriptor instead.
func (*LikePropertyReply) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{3}
}

func (x *LikePropertyReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LikePropertyReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LikePropertyReply) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

// 取消点赞房源请求
type UnlikePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId int64 `protobuf:"varint,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"` // 房源ID
	UserId     int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户ID
}

func (x *UnlikePropertyRequest) Reset() {
	*x = UnlikePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlikePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikePropertyRequest) ProtoMessage() {}

func (x *UnlikePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikePropertyRequest.ProtoReflect.Descriptor instead.
func (*UnlikePropertyRequest) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{4}
}

func (x *UnlikePropertyRequest) GetPropertyId() int64 {
	if x != nil {
		return x.PropertyId
	}
	return 0
}

func (x *UnlikePropertyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 取消点赞房源响应
type UnlikePropertyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                      // 是否成功
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                       // 提示信息
	LikeCount int64  `protobuf:"varint,3,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"` // 当前点赞数
}

func (x *UnlikePropertyReply) Reset() {
	*x = UnlikePropertyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlikePropertyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikePropertyReply) ProtoMessage() {}

func (x *UnlikePropertyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikePropertyReply.ProtoReflect.Descriptor instead.
func (*UnlikePropertyReply) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{5}
}

func (x *UnlikePropertyReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnlikePropertyReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UnlikePropertyReply) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

// 检查用户是否已点赞请求
type IsPropertyLikedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId int64 `protobuf:"varint,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"` // 房源ID
	UserId     int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 用户ID
}

func (x *IsPropertyLikedRequest) Reset() {
	*x = IsPropertyLikedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPropertyLikedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPropertyLikedRequest) ProtoMessage() {}

func (x *IsPropertyLikedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPropertyLikedRequest.ProtoReflect.Descriptor instead.
func (*IsPropertyLikedRequest) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{6}
}

func (x *IsPropertyLikedRequest) GetPropertyId() int64 {
	if x != nil {
		return x.PropertyId
	}
	return 0
}

func (x *IsPropertyLikedRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 检查用户是否已点赞响应
type IsPropertyLikedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Liked     bool  `protobuf:"varint,1,opt,name=liked,proto3" json:"liked,omitempty"`                          // 是否已点赞
	LikeCount int64 `protobuf:"varint,2,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"` // 当前点赞数
}

func (x *IsPropertyLikedReply) Reset() {
	*x = IsPropertyLikedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPropertyLikedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPropertyLikedReply) ProtoMessage() {}

func (x *IsPropertyLikedReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPropertyLikedReply.ProtoReflect.Descriptor instead.
func (*IsPropertyLikedReply) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{7}
}

func (x *IsPropertyLikedReply) GetLiked() bool {
	if x != nil {
		return x.Liked
	}
	return false
}

func (x *IsPropertyLikedReply) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

// 获取房源点赞数请求
type GetPropertyLikeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId int64 `protobuf:"varint,1,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"` // 房源ID
}

func (x *GetPropertyLikeCountRequest) Reset() {
	*x = GetPropertyLikeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyLikeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyLikeCountRequest) ProtoMessage() {}

func (x *GetPropertyLikeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyLikeCountRequest.ProtoReflect.Descriptor instead.
func (*GetPropertyLikeCountRequest) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{8}
}

func (x *GetPropertyLikeCountRequest) GetPropertyId() int64 {
	if x != nil {
		return x.PropertyId
	}
	return 0
}

// 获取房源点赞数响应
type GetPropertyLikeCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // 点赞总数
}

func (x *GetPropertyLikeCountReply) Reset() {
	*x = GetPropertyLikeCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyLikeCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyLikeCountReply) ProtoMessage() {}

func (x *GetPropertyLikeCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyLikeCountReply.ProtoReflect.Descriptor instead.
func (*GetPropertyLikeCountReply) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{9}
}

func (x *GetPropertyLikeCountReply) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 获取用户点赞列表请求
type GetUserLikeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户ID
	Page     int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页码，从1开始
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
}

func (x *GetUserLikeListRequest) Reset() {
	*x = GetUserLikeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLikeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLikeListRequest) ProtoMessage() {}

func (x *GetUserLikeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLikeListRequest.ProtoReflect.Descriptor instead.
func (*GetUserLikeListRequest) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserLikeListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserLikeListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserLikeListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取用户点赞列表响应
type GetUserLikeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*PropertyLike `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`                    // 点赞的房源列表
	TotalCount int64           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总数量
	Page       int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                               // 当前页码
	PageSize   int32           `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 每页数量
}

func (x *GetUserLikeListReply) Reset() {
	*x = GetUserLikeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLikeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLikeListReply) ProtoMessage() {}

func (x *GetUserLikeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLikeListReply.ProtoReflect.Descriptor instead.
func (*GetUserLikeListReply) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserLikeListReply) GetProperties() []*PropertyLike {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *GetUserLikeListReply) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetUserLikeListReply) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserLikeListReply) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 点赞的房源信息
type PropertyLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                             // 点赞ID
	PropertyId    int64   `protobuf:"varint,2,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`           // 房源ID
	UserId        int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                       // 用户ID
	CreatedAt     int64   `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`              // 点赞时间戳
	PropertyTitle string  `protobuf:"bytes,5,opt,name=property_title,json=propertyTitle,proto3" json:"property_title,omitempty"`   // 房源标题
	PropertyImage string  `protobuf:"bytes,6,opt,name=property_image,json=propertyImage,proto3" json:"property_image,omitempty"`   // 房源图片
	PropertyPrice float64 `protobuf:"fixed64,7,opt,name=property_price,json=propertyPrice,proto3" json:"property_price,omitempty"` // 房源价格
}

func (x *PropertyLike) Reset() {
	*x = PropertyLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_house_v3_house_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyLike) ProtoMessage() {}

func (x *PropertyLike) ProtoReflect() protoreflect.Message {
	mi := &file_api_house_v3_house_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyLike.ProtoReflect.Descriptor instead.
func (*PropertyLike) Descriptor() ([]byte, []int) {
	return file_api_house_v3_house_proto_rawDescGZIP(), []int{12}
}

func (x *PropertyLike) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PropertyLike) GetPropertyId() int64 {
	if x != nil {
		return x.PropertyId
	}
	return 0
}

func (x *PropertyLike) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PropertyLike) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PropertyLike) GetPropertyTitle() string {
	if x != nil {
		return x.PropertyTitle
	}
	return ""
}

func (x *PropertyLike) GetPropertyImage() string {
	if x != nil {
		return x.PropertyImage
	}
	return ""
}

func (x *PropertyLike) GetPropertyPrice() float64 {
	if x != nil {
		return x.PropertyPrice
	}
	return 0
}

var File_api_house_v3_house_proto protoreflect.FileDescriptor

var file_api_house_v3_house_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x4f, 0x0a, 0x13, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x66, 0x0a, 0x11, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69,
	0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x15, 0x55, 0x6e, 0x6c,
	0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x13,
	0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x16, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x14, 0x49, 0x73,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x62, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa4,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x32, 0xc2, 0x06, 0x0a, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x78, 0x0a, 0x0c, 0x4c, 0x69, 0x6b,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x69, 0x6b, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c,
	0x69, 0x6b, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6b,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x75, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0xb3, 0x01, 0x0a, 0x0f, 0x49, 0x73, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e,
	0x49, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x50, 0x5a, 0x2c, 0x12, 0x2a,
	0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x20, 0x2f, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x93, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x12, 0x1f, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x36, 0x0a, 0x0c, 0x61, 0x70, 0x69,
	0x2e, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2e, 0x76, 0x33, 0x42, 0x0c, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x33, 0x50, 0x01, 0x5a, 0x16, 0x61, 0x6e, 0x6a, 0x75, 0x6b,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x2f, 0x76, 0x33, 0x3b, 0x76,
	0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_house_v3_house_proto_rawDescOnce sync.Once
	file_api_house_v3_house_proto_rawDescData = file_api_house_v3_house_proto_rawDesc
)

func file_api_house_v3_house_proto_rawDescGZIP() []byte {
	file_api_house_v3_house_proto_rawDescOnce.Do(func() {
		file_api_house_v3_house_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_house_v3_house_proto_rawDescData)
	})
	return file_api_house_v3_house_proto_rawDescData
}

var file_api_house_v3_house_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_house_v3_house_proto_goTypes = []any{
	(*CreateHouseRequest)(nil),          // 0: api.house.v3.CreateHouseRequest
	(*CreateHouseReply)(nil),            // 1: api.house.v3.CreateHouseReply
	(*LikePropertyRequest)(nil),         // 2: api.house.v3.LikePropertyRequest
	(*LikePropertyReply)(nil),           // 3: api.house.v3.LikePropertyReply
	(*UnlikePropertyRequest)(nil),       // 4: api.house.v3.UnlikePropertyRequest
	(*UnlikePropertyReply)(nil),         // 5: api.house.v3.UnlikePropertyReply
	(*IsPropertyLikedRequest)(nil),      // 6: api.house.v3.IsPropertyLikedRequest
	(*IsPropertyLikedReply)(nil),        // 7: api.house.v3.IsPropertyLikedReply
	(*GetPropertyLikeCountRequest)(nil), // 8: api.house.v3.GetPropertyLikeCountRequest
	(*GetPropertyLikeCountReply)(nil),   // 9: api.house.v3.GetPropertyLikeCountReply
	(*GetUserLikeListRequest)(nil),      // 10: api.house.v3.GetUserLikeListRequest
	(*GetUserLikeListReply)(nil),        // 11: api.house.v3.GetUserLikeListReply
	(*PropertyLike)(nil),                // 12: api.house.v3.PropertyLike
}
var file_api_house_v3_house_proto_depIdxs = []int32{
	12, // 0: api.house.v3.GetUserLikeListReply.properties:type_name -> api.house.v3.PropertyLike
	0,  // 1: api.house.v3.House.CreateHouse:input_type -> api.house.v3.CreateHouseRequest
	2,  // 2: api.house.v3.House.LikeProperty:input_type -> api.house.v3.LikePropertyRequest
	4,  // 3: api.house.v3.House.UnlikeProperty:input_type -> api.house.v3.UnlikePropertyRequest
	6,  // 4: api.house.v3.House.IsPropertyLiked:input_type -> api.house.v3.IsPropertyLikedRequest
	8,  // 5: api.house.v3.House.GetPropertyLikeCount:input_type -> api.house.v3.GetPropertyLikeCountRequest
	10, // 6: api.house.v3.House.GetUserLikeList:input_type -> api.house.v3.GetUserLikeListRequest
	1,  // 7: api.house.v3.House.CreateHouse:output_type -> api.house.v3.CreateHouseReply
	3,  // 8: api.house.v3.House.LikeProperty:output_type -> api.house.v3.LikePropertyReply
	5,  // 9: api.house.v3.House.UnlikeProperty:output_type -> api.house.v3.UnlikePropertyReply
	7,  // 10: api.house.v3.House.IsPropertyLiked:output_type -> api.house.v3.IsPropertyLikedReply
	9,  // 11: api.house.v3.House.GetPropertyLikeCount:output_type -> api.house.v3.GetPropertyLikeCountReply
	11, // 12: api.house.v3.House.GetUserLikeList:output_type -> api.house.v3.GetUserLikeListReply
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_house_v3_house_proto_init() }
func file_api_house_v3_house_proto_init() {
	if File_api_house_v3_house_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_house_v3_house_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateHouseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateHouseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*LikePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*LikePropertyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UnlikePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UnlikePropertyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*IsPropertyLikedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*IsPropertyLikedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetPropertyLikeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetPropertyLikeCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserLikeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserLikeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_house_v3_house_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PropertyLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_house_v3_house_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_house_v3_house_proto_goTypes,
		DependencyIndexes: file_api_house_v3_house_proto_depIdxs,
		MessageInfos:      file_api_house_v3_house_proto_msgTypes,
	}.Build()
	File_api_house_v3_house_proto = out.File
	file_api_house_v3_house_proto_rawDesc = nil
	file_api_house_v3_house_proto_goTypes = nil
	file_api_house_v3_house_proto_depIdxs = nil
}
